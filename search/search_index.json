{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the WLAN Pi V2 Documentation Project The WLAN Pi initiative started at the Wireless LAN Professionals Conference in 2016. Since then, the WLAN Pi has grown in to a popular addition to the toolset of many WLAN engineers. The project is constantly evolving, adding and improving the tools available on the WLAN Pi platform. This site has been created to provide supporting documentation to the project, to make the WLAN Pi even more accessible to new and existing users. On this site we will provide information to enable you to buy (or build) your own WLAN Pi, detail the tools available on the current WLAN Pi image and provide update information about the WLAN Pi project. Navigating This Site In October 2020, after many months of hard work by the volunteer development team, the version 1 image of the WLAN Pi was superseded by version 2 . Version 2 provides a more robust software architecture that will improve on many of the issues experienced in version 1 (e.g. SD card re-burns for each software update), Additionally, it provides a number of exciting new features. It is anticipated that the version 1 image will still be in circulation for a while, so we have maintained all of the version 1 image documentation here on the documentation site. You can find the version 1 documentation here . However, please note that we will not be maintaining these document going forwards - our development efforts will solely be around the new version 2 image. The bulk of this site is now dedicated to the version 2 WLAN Pi image. The documentation set is under continual development and improvement, so please keep checking back for updates as we build out the new documentation for V2.","title":"Home"},{"location":"#welcome-to-the-wlan-pi-v2-documentation-project","text":"The WLAN Pi initiative started at the Wireless LAN Professionals Conference in 2016. Since then, the WLAN Pi has grown in to a popular addition to the toolset of many WLAN engineers. The project is constantly evolving, adding and improving the tools available on the WLAN Pi platform. This site has been created to provide supporting documentation to the project, to make the WLAN Pi even more accessible to new and existing users. On this site we will provide information to enable you to buy (or build) your own WLAN Pi, detail the tools available on the current WLAN Pi image and provide update information about the WLAN Pi project.","title":"Welcome to the WLAN Pi V2 Documentation Project"},{"location":"#navigating-this-site","text":"In October 2020, after many months of hard work by the volunteer development team, the version 1 image of the WLAN Pi was superseded by version 2 . Version 2 provides a more robust software architecture that will improve on many of the issues experienced in version 1 (e.g. SD card re-burns for each software update), Additionally, it provides a number of exciting new features. It is anticipated that the version 1 image will still be in circulation for a while, so we have maintained all of the version 1 image documentation here on the documentation site. You can find the version 1 documentation here . However, please note that we will not be maintaining these document going forwards - our development efforts will solely be around the new version 2 image. The bulk of this site is now dedicated to the version 2 WLAN Pi image. The documentation set is under continual development and improvement, so please keep checking back for updates as we build out the new documentation for V2.","title":"Navigating This Site"},{"location":"404/","text":"404 - Unknown Page Sorry, looks like we've hit an unknown page address. Please check the address you entered, or let us know if we've sent you here from a bad link on our site.","title":"Unknown Page"},{"location":"404/#404-unknown-page","text":"Sorry, looks like we've hit an unknown page address. Please check the address you entered, or let us know if we've sent you here from a bad link on our site.","title":"404 - Unknown Page"},{"location":"about/","text":"About The WLAN Pi project started in 2016 at WLPC . The goal was to create a portable, ready-to-use device that could function as a network endpoint for measuring network performance and throughput. Since then, it has been widely embraced in the awesome wireless community and after many contributions, this tiny box has evolved well beyond a network performance testing device. Today, it can also be used as a remote Wi-Fi scanner, packet capture tool, portable Wi-Fi signal generator and much more! These capabilities assist wireless professionals with designing better wireless networks, troubleshooting issues more quickly, and validating wireless network performance. See our Getting Started page to find out how you can get your own WLAN Pi setup. Here is an excellent article about the history of the WLAN Pi that provides a great account of the evolution of the WLAN Pi, by Zaib Kaleem : A Brief History of the WLAN Pi Project","title":"About"},{"location":"about/#about","text":"The WLAN Pi project started in 2016 at WLPC . The goal was to create a portable, ready-to-use device that could function as a network endpoint for measuring network performance and throughput. Since then, it has been widely embraced in the awesome wireless community and after many contributions, this tiny box has evolved well beyond a network performance testing device. Today, it can also be used as a remote Wi-Fi scanner, packet capture tool, portable Wi-Fi signal generator and much more! These capabilities assist wireless professionals with designing better wireless networks, troubleshooting issues more quickly, and validating wireless network performance. See our Getting Started page to find out how you can get your own WLAN Pi setup. Here is an excellent article about the history of the WLAN Pi that provides a great account of the evolution of the WLAN Pi, by Zaib Kaleem : A Brief History of the WLAN Pi Project","title":"About"},{"location":"faq/","text":"FAQ I hear the NEO2 is no longer available - when will replacement hardware be available? The original WLAN Pi platform was based on the NEO2 SBC Kit which was available from the Friendly Elec company in China. However, due to a lack of availability of some components for the board, they ceased production of the NEO2 board and hence the NEO2 kit. The NEO2 kit comprised the NEO2 board, an OLED display board, metal case and an SD card. Theoretically, if you can find a NEO2 board in some dusty corner of the Internet, you could still put together your own kit, as the remaining kit items are still available from Friendly Elec. It's also worth checking our suppliers page to see if they have any kits available. They may occasionally obtain some surplus stock, if and when they can find it, so may have the NEO2 kit in stock in limited numbers from time to time. To answer the question about replacement hardware, the honest answer is that there is no definite date for a replacement hardware platform being available. The team has recently looked at the new NEO3 board from Friendly Elec, but this has been discounted as a replacement at this time due to a number of technical limitations which ruled it out. The \"Rock Pi E\" SBC was considered as a possible successor to the NEO2, but after investigation, there were a number of challenges which meant that it was discounted from further consideration. The team is currently investigating (yet another!) alternative SBC as a possible replacement to the NEO2. This will require an additional carrier board/HAT to provide additional features and connectivity that are on our requirements list. It's always tricky to provide exact timescales, but as of March 2021, we are hopeful of having a finalised platform within around a 3 months time-frame. As we move closer to finalising hardware details, we will be able to provide a more accurate timescale assessment - stay tuned! Where can I get hold of a WLAN Pi kit? Please check out our suppliers page for the latest information on WLAN Pi hardware availability. Where can I get the latest WLAN Pi image? You can obtain the latest base image from the releases area of the WLAN Pi GitHub repository (look for the assets section that contains the image - the file name will be something like: wlanpi-neo2-v2.0.0.img.gz ): https://github.com/WLAN-Pi/releases/releases Once downloaded, you can burn it on to an SD card as described in the following administration document: Burning a WLAN Pi Image How do I find which image version is currently installed on my WLAN? If you look on the top-level \"home\" page of the front panel display, the version number of the image should be shown on the top right of the display: If you are the CLI of the WLAN Pi, you may also check by performing the following command: wlanpi@wlanpi:/$ cat /etc/wlanpi-release VERSION=\"2.0.0-dev3\" How do I burn a WLAN Pi image? Checkout this administration note: Burning a WLAN Pi Image How do I update software packages on the WLAN Pi? Checkout this administration note: [Burning a WLAN Pi Image][ updating_packages How do I change the password for the wlanpi user? Checkout this administration note: Change the Password of the wlanpi User If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences. How do I change the hostname of my WLAN Pi Checkout this administration note: Change the hostname of a WLAN Pi How do I set the timezone on my WLAN Pi? Checkout this administration note: Change the Timezone of a WLAN Pi How do I connect my WLAN Pi to my wireless network? Checkout this administration note: Connecting You WLAN Pi to a Wireless Network Why do I see missing data frames when capturing over the air with the WLAN Pi Checkout this administration note: CF-912 Capture Issues I'd like to 3D print my own WLAN Pi case - are the printer plans available? Yes, check out the following links: https://www.prusaprinters.org/prints/16184-wlan-pi-handheld-case http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html I'm having difficult getting a connection over the USB link to my WLAN Pi? What's going on? The WLAN Pi has a very useful feature that allows you to connect your Mac or Window machine to a WAN Pi via a USB connection. This is effectively an Ethernet over USB connection, also known as an OTG connection (On The Go). This requires a USB to micro-USB cable to hook up your laptop/Mac to the micro-USB socket on the WLAN Pi (which is also used to power the WLAN Pi). This is very cool as it both powers up your WLAN Pi and gives you a local network connection to the WLAN Pi so that you can SSH or browse in to it. There are two main issues we have seen with connectivity over the OTG connection: Some cables that look like an OTG cable (i.e. a regular USB plug on one end and a micro-USB on the other) are, in fact, just phone charger cables and only have the power wires through. This means there are no data wires and you can never establish the OTG connection. The WLAN Pi will power up, but the OTG connection will not work. (You can check if you have an OTG connection by looking at the network interfaces on your laptop/Mac - if OTG is working, a new Ethernet port automagically appears.) If you hit this issue, try another cable (or two) The second issue we hear about impacts Windows users. Please check out this super blog post if you have a Windows laptop and you think your cable is good: Blog Post Link Which wireless adapters are supported on the WLAN Pi ? Please checkout our Supported Hardware page. Where can I get help support with my WLAN Pi? Support is on a volunteer/best efforts basis by project volunteers. Try here How do I suggest a new feature for the WLAN Pi? If you have a feature suggestion for the WLAN Pi, please get along to the GitHub site for the project and open an issue ticket with your suggestion: link (this will need a (free) GitHub account to create an issue)","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"faq/#i-hear-the-neo2-is-no-longer-available-when-will-replacement-hardware-be-available","text":"The original WLAN Pi platform was based on the NEO2 SBC Kit which was available from the Friendly Elec company in China. However, due to a lack of availability of some components for the board, they ceased production of the NEO2 board and hence the NEO2 kit. The NEO2 kit comprised the NEO2 board, an OLED display board, metal case and an SD card. Theoretically, if you can find a NEO2 board in some dusty corner of the Internet, you could still put together your own kit, as the remaining kit items are still available from Friendly Elec. It's also worth checking our suppliers page to see if they have any kits available. They may occasionally obtain some surplus stock, if and when they can find it, so may have the NEO2 kit in stock in limited numbers from time to time. To answer the question about replacement hardware, the honest answer is that there is no definite date for a replacement hardware platform being available. The team has recently looked at the new NEO3 board from Friendly Elec, but this has been discounted as a replacement at this time due to a number of technical limitations which ruled it out. The \"Rock Pi E\" SBC was considered as a possible successor to the NEO2, but after investigation, there were a number of challenges which meant that it was discounted from further consideration. The team is currently investigating (yet another!) alternative SBC as a possible replacement to the NEO2. This will require an additional carrier board/HAT to provide additional features and connectivity that are on our requirements list. It's always tricky to provide exact timescales, but as of March 2021, we are hopeful of having a finalised platform within around a 3 months time-frame. As we move closer to finalising hardware details, we will be able to provide a more accurate timescale assessment - stay tuned!","title":"I hear the NEO2 is no longer available - when will replacement hardware be available?"},{"location":"faq/#where-can-i-get-hold-of-a-wlan-pi-kit","text":"Please check out our suppliers page for the latest information on WLAN Pi hardware availability.","title":"Where can I get hold of a WLAN Pi kit?"},{"location":"faq/#where-can-i-get-the-latest-wlan-pi-image","text":"You can obtain the latest base image from the releases area of the WLAN Pi GitHub repository (look for the assets section that contains the image - the file name will be something like: wlanpi-neo2-v2.0.0.img.gz ): https://github.com/WLAN-Pi/releases/releases Once downloaded, you can burn it on to an SD card as described in the following administration document: Burning a WLAN Pi Image","title":"Where can I get the latest WLAN Pi image?"},{"location":"faq/#how-do-i-find-which-image-version-is-currently-installed-on-my-wlan","text":"If you look on the top-level \"home\" page of the front panel display, the version number of the image should be shown on the top right of the display: If you are the CLI of the WLAN Pi, you may also check by performing the following command: wlanpi@wlanpi:/$ cat /etc/wlanpi-release VERSION=\"2.0.0-dev3\"","title":"How do I find which image version is currently installed on my WLAN?"},{"location":"faq/#how-do-i-burn-a-wlan-pi-image","text":"Checkout this administration note: Burning a WLAN Pi Image","title":"How do I burn a WLAN Pi image?"},{"location":"faq/#how-do-i-update-software-packages-on-the-wlan-pi","text":"Checkout this administration note: [Burning a WLAN Pi Image][ updating_packages","title":"How do I update software packages on the WLAN Pi?"},{"location":"faq/#how-do-i-change-the-password-for-the-wlanpi-user","text":"Checkout this administration note: Change the Password of the wlanpi User If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences.","title":"How do I change the password for the wlanpi user?"},{"location":"faq/#how-do-i-change-the-hostname-of-my-wlan-pi","text":"Checkout this administration note: Change the hostname of a WLAN Pi","title":"How do I change the hostname of my WLAN Pi"},{"location":"faq/#how-do-i-set-the-timezone-on-my-wlan-pi","text":"Checkout this administration note: Change the Timezone of a WLAN Pi","title":"How do I set the timezone on my WLAN Pi?"},{"location":"faq/#how-do-i-connect-my-wlan-pi-to-my-wireless-network","text":"Checkout this administration note: Connecting You WLAN Pi to a Wireless Network","title":"How do I connect my WLAN Pi to my wireless network?"},{"location":"faq/#why-do-i-see-missing-data-frames-when-capturing-over-the-air-with-the-wlan-pi","text":"Checkout this administration note: CF-912 Capture Issues","title":"Why do I see missing data frames when capturing over the air with the WLAN Pi"},{"location":"faq/#id-like-to-3d-print-my-own-wlan-pi-case-are-the-printer-plans-available","text":"Yes, check out the following links: https://www.prusaprinters.org/prints/16184-wlan-pi-handheld-case http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html","title":"I'd like to 3D print my own WLAN Pi case - are the printer plans available?"},{"location":"faq/#im-having-difficult-getting-a-connection-over-the-usb-link-to-my-wlan-pi-whats-going-on","text":"The WLAN Pi has a very useful feature that allows you to connect your Mac or Window machine to a WAN Pi via a USB connection. This is effectively an Ethernet over USB connection, also known as an OTG connection (On The Go). This requires a USB to micro-USB cable to hook up your laptop/Mac to the micro-USB socket on the WLAN Pi (which is also used to power the WLAN Pi). This is very cool as it both powers up your WLAN Pi and gives you a local network connection to the WLAN Pi so that you can SSH or browse in to it. There are two main issues we have seen with connectivity over the OTG connection: Some cables that look like an OTG cable (i.e. a regular USB plug on one end and a micro-USB on the other) are, in fact, just phone charger cables and only have the power wires through. This means there are no data wires and you can never establish the OTG connection. The WLAN Pi will power up, but the OTG connection will not work. (You can check if you have an OTG connection by looking at the network interfaces on your laptop/Mac - if OTG is working, a new Ethernet port automagically appears.) If you hit this issue, try another cable (or two) The second issue we hear about impacts Windows users. Please check out this super blog post if you have a Windows laptop and you think your cable is good: Blog Post Link","title":"I'm having difficult getting a connection over the USB link to my WLAN Pi? What's going on?"},{"location":"faq/#which-wireless-adapters-are-supported-on-the-wlan-pi","text":"Please checkout our Supported Hardware page.","title":"Which wireless adapters are supported on the WLAN Pi ?"},{"location":"faq/#where-can-i-get-help-support-with-my-wlan-pi","text":"Support is on a volunteer/best efforts basis by project volunteers. Try here","title":"Where can I get help support with my WLAN Pi?"},{"location":"faq/#how-do-i-suggest-a-new-feature-for-the-wlan-pi","text":"If you have a feature suggestion for the WLAN Pi, please get along to the GitHub site for the project and open an issue ticket with your suggestion: link (this will need a (free) GitHub account to create an issue)","title":"How do I suggest a new feature for the WLAN Pi?"},{"location":"learning_resources/","text":"Learning Resources Here are a few learning resources that may help you get the most out of your WLAN Pi: Video: WLAN Pi 2.0 (CWNP WTF Conference) Video: Powering Your WLAN Pi Video: Connecting To Your WLAN Pi Video: 3 Use Cases For The WLAN Pi Video: How to access the CLI of the WLANPi (WiFiNigel) Video: 10 Easy Things To Do With a WLAN Pi (WiFiNigel) Video: How to Burn a New Image on Your WLAN Pi (WiFiNigel) Video: WLAN PI Project Update (WLPC Phoenix 2020) Video: Using the WLANPi as a wireless serial console (WiFiNigel) Video: Wireshark plugin for WLANPi wireless captures using Windows 10 (WiFiNigel) Document: V1.x User Guide (slightly out of date, still useful)","title":"Learning Resources"},{"location":"learning_resources/#learning-resources","text":"Here are a few learning resources that may help you get the most out of your WLAN Pi: Video: WLAN Pi 2.0 (CWNP WTF Conference) Video: Powering Your WLAN Pi Video: Connecting To Your WLAN Pi Video: 3 Use Cases For The WLAN Pi Video: How to access the CLI of the WLANPi (WiFiNigel) Video: 10 Easy Things To Do With a WLAN Pi (WiFiNigel) Video: How to Burn a New Image on Your WLAN Pi (WiFiNigel) Video: WLAN PI Project Update (WLPC Phoenix 2020) Video: Using the WLANPi as a wireless serial console (WiFiNigel) Video: Wireshark plugin for WLANPi wireless captures using Windows 10 (WiFiNigel) Document: V1.x User Guide (slightly out of date, still useful)","title":"Learning Resources"},{"location":"news/","text":"News Availability of the V2.0.0 Image 30th September 2020 After many months of hard works, version 2.0.0 of the WLAN Pi image has been released. The image has been rebuilt from the ground up to provide an improved software installation and update process. It's toolset has been revamped, it has many usability improvements and hardware support has been expanded. For details of what's new in version 2.0.0, please visit the official \"whats new\" page. Availability of the NEO2 Device 10th May 2020 It appears that the company who produce the NEO2 device, which is the platform on which the WAN Pi is currently built, may not be able to continue its production due to component availability issues. We understand that they are hoping to have prototypes of a replacement device during May 2020, but it looks like the NEO2 is no more. We will be assessing the new device when it becomes available, as well as looking at possible alternatives for the WLAN Pi project hardware going forwards. There are still quite a few ready-built WLAN Pi's available from the WLAN Pros Store and BadgerFi in the UK. We'll still be developing for the existing platform going forwards, so the existing NEO2 platform still has very significant mileage left going forwards. The current form factor, performance and power consumption make it a very difficult act to follow, so you might like to consider getting your NEO2-based WLAN Pi while stocks last. More details to follow as we get more information....stay tuned. How to check client DFS channel support 14th February 2020 Useful video from Whyf16uy about how to use the WLAN Pi profiler to identify if a client supports DFS channels: link Image version 1.9.1 [WLPC edition] Released 13th February 2020 The new WLANPi image for WLPC Phoenix has been released, get it here : link ZeroTier and WLAN Pi - Keeping profiles & keys for re-imaging Nice blog post from Rick Steiner about using ZeriTier on the WLAN Pi and how you can preserve your ZeroTier config next time you re-image : link How to burn a new image on your WLAN Pi (Video) 19th January 2020 Video on Youtube . WLAN Pi Image v1.9.0 released 2nd January 2019 Image version 1.9.0 is available for download at : v1.9.0 Remote access to a device behind NAT/Firewall 24th November 2019 Article by Daniel Finimundi: article WLANPi 1.8.4 beta released 14th November 2019 Version 1.8.49(beta) is avaiable or download at : v.1.8.4 WLANPI as a SYSLOG Server ? (Blog article) 14th November 2019 Nice blog article from Haydn Andrews about using a WLANPi as a field-based syslog server for troubleshooting: link Using the WLAN Pi's USB host interface in Windows 10 31st October 2019 In this blog article , Patrick Langendoen discusses how to fix an issue on Windows machines with detecting the USB connection to a WLANPi as a serial port, rather than the expected USB Ethernet /RNDIS interfaces: link","title":"News"},{"location":"news/#news","text":"","title":"News"},{"location":"news/#availability-of-the-v200-image","text":"30th September 2020 After many months of hard works, version 2.0.0 of the WLAN Pi image has been released. The image has been rebuilt from the ground up to provide an improved software installation and update process. It's toolset has been revamped, it has many usability improvements and hardware support has been expanded. For details of what's new in version 2.0.0, please visit the official \"whats new\" page.","title":"Availability of the V2.0.0 Image"},{"location":"news/#availability-of-the-neo2-device","text":"10th May 2020 It appears that the company who produce the NEO2 device, which is the platform on which the WAN Pi is currently built, may not be able to continue its production due to component availability issues. We understand that they are hoping to have prototypes of a replacement device during May 2020, but it looks like the NEO2 is no more. We will be assessing the new device when it becomes available, as well as looking at possible alternatives for the WLAN Pi project hardware going forwards. There are still quite a few ready-built WLAN Pi's available from the WLAN Pros Store and BadgerFi in the UK. We'll still be developing for the existing platform going forwards, so the existing NEO2 platform still has very significant mileage left going forwards. The current form factor, performance and power consumption make it a very difficult act to follow, so you might like to consider getting your NEO2-based WLAN Pi while stocks last. More details to follow as we get more information....stay tuned.","title":"Availability of the NEO2 Device"},{"location":"news/#how-to-check-client-dfs-channel-support","text":"14th February 2020 Useful video from Whyf16uy about how to use the WLAN Pi profiler to identify if a client supports DFS channels: link","title":"How to check client DFS channel support"},{"location":"news/#image-version-191-wlpc-edition-released","text":"13th February 2020 The new WLANPi image for WLPC Phoenix has been released, get it here : link","title":"Image version 1.9.1 [WLPC edition] Released"},{"location":"news/#zerotier-and-wlan-pi-keeping-profiles-keys-for-re-imaging","text":"Nice blog post from Rick Steiner about using ZeriTier on the WLAN Pi and how you can preserve your ZeroTier config next time you re-image : link","title":"ZeroTier and WLAN Pi - Keeping profiles &amp; keys for re-imaging"},{"location":"news/#how-to-burn-a-new-image-on-your-wlan-pi-video","text":"19th January 2020 Video on Youtube .","title":"How to burn a new image on your WLAN Pi (Video)"},{"location":"news/#wlan-pi-image-v190-released","text":"2nd January 2019 Image version 1.9.0 is available for download at : v1.9.0","title":"WLAN Pi Image v1.9.0 released"},{"location":"news/#remote-access-to-a-device-behind-natfirewall","text":"24th November 2019 Article by Daniel Finimundi: article","title":"Remote access to a device behind NAT/Firewall"},{"location":"news/#wlanpi-184-beta-released","text":"14th November 2019 Version 1.8.49(beta) is avaiable or download at : v.1.8.4","title":"WLANPi 1.8.4 beta released"},{"location":"news/#wlanpi-as-a-syslog-server-blog-article","text":"14th November 2019 Nice blog article from Haydn Andrews about using a WLANPi as a field-based syslog server for troubleshooting: link","title":"WLANPI as a SYSLOG Server ? (Blog article)"},{"location":"news/#using-the-wlan-pis-usb-host-interface-in-windows-10","text":"31st October 2019 In this blog article , Patrick Langendoen discusses how to fix an issue on Windows machines with detecting the USB connection to a WLANPi as a serial port, rather than the expected USB Ethernet /RNDIS interfaces: link","title":"Using the WLAN Pi's USB host interface in Windows 10"},{"location":"suppliers/","text":"Suppliers Note: Please note that the currently supported WLAN Pi platform, the NEO2, is no longer available from the hardware manufacturer. As a result, no new hardware will be available to purchase from the manufacturer going forwards. Our kit suppliers listed below may occasionally find surplus stocks from various resellers and make them available, but numbers are generally very limited. Please check the kit suppliers shown below for availability. A new hardware platform is under development to replace the NEO2, but there are currently no fixed timescales for its availability. Please check here for our latest statement on platform availability Complete Kit Suppliers Wireless LAN Pros store BadgerFi (UK/Europe) NEO2 Suppliers FriendlyArm NEO2 Kit {target= blank} (Note: As of April 2020, we understand that FriendlyArm are no longer producing the NEO2 due to component supply issues. We are investigating a suitable replacement device to use going forwards - _Please check here for our latest statement on platform availability Comfast CF-912 Adapter Amazon ebay (Note: this is a search link, check results show correct CF-921AC item) Generic MT7612U Adapter AliExpress","title":"Suppliers"},{"location":"suppliers/#suppliers","text":"Note: Please note that the currently supported WLAN Pi platform, the NEO2, is no longer available from the hardware manufacturer. As a result, no new hardware will be available to purchase from the manufacturer going forwards. Our kit suppliers listed below may occasionally find surplus stocks from various resellers and make them available, but numbers are generally very limited. Please check the kit suppliers shown below for availability. A new hardware platform is under development to replace the NEO2, but there are currently no fixed timescales for its availability. Please check here for our latest statement on platform availability","title":"Suppliers"},{"location":"suppliers/#complete-kit-suppliers","text":"Wireless LAN Pros store BadgerFi (UK/Europe)","title":"Complete Kit Suppliers"},{"location":"suppliers/#neo2-suppliers","text":"FriendlyArm NEO2 Kit {target= blank} (Note: As of April 2020, we understand that FriendlyArm are no longer producing the NEO2 due to component supply issues. We are investigating a suitable replacement device to use going forwards - _Please check here for our latest statement on platform availability","title":"NEO2 Suppliers"},{"location":"suppliers/#comfast-cf-912-adapter","text":"Amazon ebay (Note: this is a search link, check results show correct CF-921AC item)","title":"Comfast CF-912 Adapter"},{"location":"suppliers/#generic-mt7612u-adapter","text":"AliExpress","title":"Generic MT7612U Adapter"},{"location":"support/","text":"Support As this project is provided by a team of volunteers, any support around the configuration and operation of your WLANPi is provided on a best-efforts basis. If you have hardware issues, you will need to contact the supplier of your hardware. For all other issues the best ways to contact the team are: via Twitter (hashtag #WLANPi or Twitter account @WLANPi ) the Wireless LAN Pros Slack group (it has a #WLANPi channel - @Sam Clements may be able to get you set up with an account if needed). Another option may be to have a look through GitHub and see if you can find the original author of the module you are having issues with and drop them a note.","title":"Support"},{"location":"support/#support","text":"As this project is provided by a team of volunteers, any support around the configuration and operation of your WLANPi is provided on a best-efforts basis. If you have hardware issues, you will need to contact the supplier of your hardware. For all other issues the best ways to contact the team are: via Twitter (hashtag #WLANPi or Twitter account @WLANPi ) the Wireless LAN Pros Slack group (it has a #WLANPi channel - @Sam Clements may be able to get you set up with an account if needed). Another option may be to have a look through GitHub and see if you can find the original author of the module you are having issues with and drop them a note.","title":"Support"},{"location":"supported_hardware/","text":"Supported Hardware The software distribution and tools developed for the WLAN Pi are tested with a number of primary hardware components. The items have been to work well for the purposes of the WLAN Pi toolset. These are the devices that are listed below as the \"recommended\" devices to use for the WLAN Pi. As the WLAN Pi software distribution is based on Linux, it may operate with a number of other components, which you are free to try for your own purposes. However, the development team strongly recommend you use only the components listed below for the widest and most reliable feature support. One area that has many options is WLAN adapter support. The WLAN Pi distribution supports a variety of RealTek and Mediatek adapters. However, the chipsets supported are limited, and the features supported are highly variable between adapters. Again, feel free to experiment with any adapters you may have lying around in your bag of dongles at home, but be mindful of the fact that even if they appear to work OK, their feature set may well be limited. The WLAN Pi developers maintain a Google sheet that shows the features that have been verified during our testing, which may be of help if you like to experiment: Wireless Adapter List {target= blank} (_This is not an exhaustive list of all adapters that may work, there may be others - make sure you pay attention to the \"supported modes\" row in the sheet when choosing your adapter ) Base Platform FriendlyArm NEO2 Kit The WLAN Pi platform is built using the FriendlyArm NanoPi NEO2 Kit . The NEO2 kit comprises the NEO2 board, an OLED display board, metal case and an SD card. The NEO2 is a super tiny quad-core single-board computer (SBC). The NanoPi NEO2 shares some similarities to the more well known Raspberry Pi, however the NanoPi is less than \u00bd its size, consumes less power, and it can push over 900 Mbps over its gigabit ethernet connection. Specs: CPU: Allwinner H5, Quad-core 64-bit high-performance Cortex A53 DDR3 RAM: 1GB Storage: microSD (16 GB card included), can be expanded up to 128GB More info: http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2 Unfortunately, as of April 2020, FriendlyArm are no longer producing the NEO2 board due to component supply issues. There may be limited numbers of kits available periodically from our listed suppliers and other online suppliers with old stock, but they are generally unavailable. We are working on sourcing a replacement base hardware platform - see here ( Check out our suppliers page for guidance on where to purchase this item ) Wireless Adapters Comfast CF-912 Adapter The Comfast CF-912 adapter is a 2 spatial stream, dual band, 802.11ac device. It uses a Realtek 8812au chipset and has been the adapter of choice for the WLAN Pi since the early 1.x days of the project. It supports monitor mode and packet injection, so is great for over the air packet capture work. The CF-912 is good for most application but has a slight weakness, as it may report spurious RSSI values in RadioTap headers, causing strange looking RSSI values when inspecting frames with tools such as Wireshark and Wi-Fi Explorer. ( Check out our suppliers page for guidance on where to purchase this item ) Generic MT7612U Adapter This is a \"no-name\" adapter that is available from a few online retailers. Despite its lack of branding, it works well with the WLAN Pi software (and it also fits inside the orange WLAN Pi case, which is a bonus). It uses a Mediatek MT7612U chipset and is very similar in spec to the CF-919AC (2SS, 802.11ac, monitor mode, packet injection). It has a slight advantage over the CF-912 as it reports sensible RSSI values in RadioTap headers. It has a second advantage over the CF-912, as it also reports frame MCS values (which are not reported by Realtek NICs). Mediatek NICs tend to have improved driver capabilities and stability in Linux compared to Realtek devices. Mediatek adapter support was added in the V2 image is likely to be the preferred adapter option for the WLAN Pi going forwards. ( Check out our suppliers page for guidance on where to purchase this item ) Info If you'd like to try out other wireless adapters, check out this Wireless Adapter List compiled by our developers. Many are not as fully featured as those recommended above, but may have limited use if they contain a specific feature you require.","title":"Supported Hardware"},{"location":"supported_hardware/#supported-hardware","text":"The software distribution and tools developed for the WLAN Pi are tested with a number of primary hardware components. The items have been to work well for the purposes of the WLAN Pi toolset. These are the devices that are listed below as the \"recommended\" devices to use for the WLAN Pi. As the WLAN Pi software distribution is based on Linux, it may operate with a number of other components, which you are free to try for your own purposes. However, the development team strongly recommend you use only the components listed below for the widest and most reliable feature support. One area that has many options is WLAN adapter support. The WLAN Pi distribution supports a variety of RealTek and Mediatek adapters. However, the chipsets supported are limited, and the features supported are highly variable between adapters. Again, feel free to experiment with any adapters you may have lying around in your bag of dongles at home, but be mindful of the fact that even if they appear to work OK, their feature set may well be limited. The WLAN Pi developers maintain a Google sheet that shows the features that have been verified during our testing, which may be of help if you like to experiment: Wireless Adapter List {target= blank} (_This is not an exhaustive list of all adapters that may work, there may be others - make sure you pay attention to the \"supported modes\" row in the sheet when choosing your adapter )","title":"Supported Hardware"},{"location":"supported_hardware/#base-platform","text":"","title":"Base Platform"},{"location":"supported_hardware/#friendlyarm-neo2-kit","text":"The WLAN Pi platform is built using the FriendlyArm NanoPi NEO2 Kit . The NEO2 kit comprises the NEO2 board, an OLED display board, metal case and an SD card. The NEO2 is a super tiny quad-core single-board computer (SBC). The NanoPi NEO2 shares some similarities to the more well known Raspberry Pi, however the NanoPi is less than \u00bd its size, consumes less power, and it can push over 900 Mbps over its gigabit ethernet connection. Specs: CPU: Allwinner H5, Quad-core 64-bit high-performance Cortex A53 DDR3 RAM: 1GB Storage: microSD (16 GB card included), can be expanded up to 128GB More info: http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2 Unfortunately, as of April 2020, FriendlyArm are no longer producing the NEO2 board due to component supply issues. There may be limited numbers of kits available periodically from our listed suppliers and other online suppliers with old stock, but they are generally unavailable. We are working on sourcing a replacement base hardware platform - see here ( Check out our suppliers page for guidance on where to purchase this item )","title":"FriendlyArm NEO2 Kit"},{"location":"supported_hardware/#wireless-adapters","text":"","title":"Wireless Adapters"},{"location":"supported_hardware/#comfast-cf-912-adapter","text":"The Comfast CF-912 adapter is a 2 spatial stream, dual band, 802.11ac device. It uses a Realtek 8812au chipset and has been the adapter of choice for the WLAN Pi since the early 1.x days of the project. It supports monitor mode and packet injection, so is great for over the air packet capture work. The CF-912 is good for most application but has a slight weakness, as it may report spurious RSSI values in RadioTap headers, causing strange looking RSSI values when inspecting frames with tools such as Wireshark and Wi-Fi Explorer. ( Check out our suppliers page for guidance on where to purchase this item )","title":"Comfast CF-912 Adapter"},{"location":"supported_hardware/#generic-mt7612u-adapter","text":"This is a \"no-name\" adapter that is available from a few online retailers. Despite its lack of branding, it works well with the WLAN Pi software (and it also fits inside the orange WLAN Pi case, which is a bonus). It uses a Mediatek MT7612U chipset and is very similar in spec to the CF-919AC (2SS, 802.11ac, monitor mode, packet injection). It has a slight advantage over the CF-912 as it reports sensible RSSI values in RadioTap headers. It has a second advantage over the CF-912, as it also reports frame MCS values (which are not reported by Realtek NICs). Mediatek NICs tend to have improved driver capabilities and stability in Linux compared to Realtek devices. Mediatek adapter support was added in the V2 image is likely to be the preferred adapter option for the WLAN Pi going forwards. ( Check out our suppliers page for guidance on where to purchase this item ) Info If you'd like to try out other wireless adapters, check out this Wireless Adapter List compiled by our developers. Many are not as fully featured as those recommended above, but may have limited use if they contain a specific feature you require.","title":"Generic MT7612U Adapter"},{"location":"useful_links/","text":"Useful Links Here is a collection of useful articles and resources that may help you on your WLANPi journey: Development: WLANPi GitHub site WLANPi.com Articles Remote access to a device behind NAT/Firewall","title":"WLANPi project links to useful sites"},{"location":"useful_links/#useful-links","text":"Here is a collection of useful articles and resources that may help you on your WLANPi journey:","title":"Useful Links"},{"location":"useful_links/#development","text":"WLANPi GitHub site WLANPi.com","title":"Development:"},{"location":"useful_links/#articles","text":"Remote access to a device behind NAT/Firewall","title":"Articles"},{"location":"videos/","text":"WLAN Pi Videos Please check back soon as we create our library of videos for the version 2 image of the WLAN Pi. (Jan 2020) How to Burn a New Image on Your WLAN Pi (WiFiNigel)","title":"Videos About the WLAN Pi"},{"location":"videos/#wlan-pi-videos","text":"Please check back soon as we create our library of videos for the version 2 image of the WLAN Pi. (Jan 2020) How to Burn a New Image on Your WLAN Pi (WiFiNigel)","title":"WLAN Pi Videos"},{"location":"admin/","text":"Administration Tasks Administering your WLAN Pi can be a challenge to those who are not too comfortable with operating on the Linux command line (CLI). Over time we aim to move more towards GUI-based administration, but in the meantime there will undoubtedly be times when you'll need to roll up your sleeves and execute a few CLI commands. In this section, we'll provide access to a number of tech notes to provide guidance on how to perform the more common administration tasks you'll need for your WLAN Pi. Tech Notes Change the hostname of a WLAN Pi Change the Timezone of a WLAN Pi Burning a WLAN Pi image on to an SD card Updating WLAN Pi packages Change the password of the wlanpi user Updating software Packages on the WLAN Pi Connecting Your WLAN Pi to a Wireless Network CF-912AC capture issues - swapping out for a MediaTek adapter","title":"Administration"},{"location":"admin/#administration-tasks","text":"Administering your WLAN Pi can be a challenge to those who are not too comfortable with operating on the Linux command line (CLI). Over time we aim to move more towards GUI-based administration, but in the meantime there will undoubtedly be times when you'll need to roll up your sleeves and execute a few CLI commands. In this section, we'll provide access to a number of tech notes to provide guidance on how to perform the more common administration tasks you'll need for your WLAN Pi.","title":"Administration Tasks"},{"location":"admin/#tech-notes","text":"Change the hostname of a WLAN Pi Change the Timezone of a WLAN Pi Burning a WLAN Pi image on to an SD card Updating WLAN Pi packages Change the password of the wlanpi user Updating software Packages on the WLAN Pi Connecting Your WLAN Pi to a Wireless Network CF-912AC capture issues - swapping out for a MediaTek adapter","title":"Tech Notes"},{"location":"admin/burn_image/","text":"Burning a WLAN Pi Image If you'd like to burn a WLAN Pi image on to a kit you've bought or update the image of your existing WLAN Pi, here is a video explaining the process: <-- back","title":"Burning a WLAN Pi Image"},{"location":"admin/burn_image/#burning-a-wlan-pi-image","text":"If you'd like to burn a WLAN Pi image on to a kit you've bought or update the image of your existing WLAN Pi, here is a video explaining the process: <-- back","title":"Burning a WLAN Pi Image"},{"location":"admin/cf912_issues/","text":"Issues With CF-912AC Frame Capture 8th March 2021 - Author: Nigel Bowden If you've been seeing issues with missing data frames in your over-the-air captures using the WLAN Pi, this article may provide some useful advice in fixing a known wireless frame capture issue. The CF-912AC Comfast adapter has long been the \"go-to\" adapter for use with the WLAN Pi. It is a 2-stream adapter that provides support for PHYs up to 802.11ac. It uses the Realtek RTL8812AU wireless chipset. It is very versatile when considering the various options it provides for the WLAN Pi, including: acting as an 802.11ac client, supporting monitor mode, packet injection and AP mode. This allows the WLAN Pi to perform a wide variety of actions, such as over the air packet capture and acting as a simple AP. Since the adoption of the NEO2 platform for the WLAN Pi project, obtaining stable drivers for the CF-912AC has been an ongoing challenge. Thanks to the ongoing, excellent efforts of Jerry Olla, the project has managed to source and include drivers of reasonably good quality to provide many of the WLAN Pi Wi-Fi related features. The WLAN Pi team recently had a report from one of our kind users (thanks Juan! ) that during an over-the-air capture, the WLAN Pi appeared to be only capturing data frames running at basic rates. After further investigation by the WLAN Pi team, it became apparent that 802.11ac data frames that were sent using 2 spatial streams were not being captured. Single stream 802.11ac data frames were captured OK. 802.11n 1 & 2 spatial stream data frames and all legacy rate data frames were also captured with no issues. All management and control frames (which all run at legacy rates anyhow) were also fine. This is a suspected issue with the Realtek driver, so there is little we can do to fix the 2 stream 11ac capture issue. During testing, it was noted that there may be the occasional 2SS 11ac data frames observed, but this was sporadic and unpredictable. The issue has been reported by other users of the chipset driver, and we have added our own reports of the observed issue. The issue may be fixed at some stage, but as this issue appears to have been present for quite some time, this is unlikely to be fixed in the short-term. ( Note: Remember, the CF912 NIC is an 802.11ac, 2 stream device. Any data frames that use 802.11ac, 3 spatial streams will never be captured by the NIC. Also, no 802.11ax data frames can be captured by the NIC. ) Alternative NIC Since version 2.x of the WLAN Pi image, support for MediaTek USB wireless adapters has been included. The team has received reports that Linux driver support for the MediaTek adapters is generally better than for RealTek drivers (for the features that we wish to use). Testing by the team over the past few months has indicated that the MediaTek MT7612U driver seems to perform very well and has no issue with the 2-stream over-the-air capture. The Mediatek MT7612U adapter option has become a favourite among the developer team. However, sourcing a USB NIC that contains this chipset has not been without its challenges :) Internally, the dev team has settled on what is internally referred to as the \"no-name\" MediaTek adapter - this is an unbranded, generic adapter. The easiest place to source this adapter is currently the AliExpress store, and is available from many different suppliers. Here is once source that I have used: https://www.aliexpress.com/item/1005001510706842.html . If you search for the phrase \"New arrival Black MT7612U\" on Aliexepress , you will see that there are many suppliers of this USB dongle to choose from. When ordering, you can expect delivery to typically take a few weeks. ( Hopefully, perhaps some of our suppliers may pick up on this requirement and make these more easily available... ) NIC Swap-out The good news is that if/when you obtain one of these adapters and have the orange-case WLAN Pi kit, it is very easy to swap out the CF-912 NIC inside the case for the no-name MT7612U adapter. I've provided a few photos below, taken when I swapped out my own CF-912 recently. In summary, you will need to: Remove the front panel sticker Use a hex spanner to undo the 3 retaining bolts Remove the micro-SD card Prise the plastic case top/bottom sections apart Take out the Neo2 Swap over the CF-912 USB NIC for the MT7612 USB NIC Put the Neo2 back in the case Put the case back together Re-insert the micro-SD card Re-install the retaining bolts Re-apply the front panel sticker WLAN Pi case & new MT7612U adapter Remove sticker to reveal 3 x securing bolts Remove the 3 hex-head bolts and make sure the micro-SD card is removed (flip over the case to locate the micro-SD card - press the card in and it will pop out on a spring release) Prise the two halves of the case apart to reveal the Neo2 and the CF-912 USB NIC Take the Neo2/USB NIC assembly out of the case Swap out the CF912 USB adapter for the new MT7612U adapter Put the Neo2/USB assembly back in to the bottom half of the case (making sure to locate the USB cable correctly in the provided cable channel) Clip the two halves of the case back together, re-insert the 3 retaining bolts, re-insert the micro-SD card and re-apply the sticker RPi Support Finally, another good reason to get hold of a MediaTek adapter is that if you have a Raspberry Pi, then the MediaTek adapter is supported on recent RPi images and will support monitor mode. This opens up interesting possibilities for using an RPi for remote over-the-air capture operations (e.g. capture with Wireshark (using the extcap plugin ) or a tool such as Airtool ) Further Questions If you have any questions, please contact the WLAN Pi team via our discussions forum on GitHub . <-- back","title":"Issues With CF-912AC Frame Capture"},{"location":"admin/cf912_issues/#issues-with-cf-912ac-frame-capture","text":"8th March 2021 - Author: Nigel Bowden If you've been seeing issues with missing data frames in your over-the-air captures using the WLAN Pi, this article may provide some useful advice in fixing a known wireless frame capture issue. The CF-912AC Comfast adapter has long been the \"go-to\" adapter for use with the WLAN Pi. It is a 2-stream adapter that provides support for PHYs up to 802.11ac. It uses the Realtek RTL8812AU wireless chipset. It is very versatile when considering the various options it provides for the WLAN Pi, including: acting as an 802.11ac client, supporting monitor mode, packet injection and AP mode. This allows the WLAN Pi to perform a wide variety of actions, such as over the air packet capture and acting as a simple AP. Since the adoption of the NEO2 platform for the WLAN Pi project, obtaining stable drivers for the CF-912AC has been an ongoing challenge. Thanks to the ongoing, excellent efforts of Jerry Olla, the project has managed to source and include drivers of reasonably good quality to provide many of the WLAN Pi Wi-Fi related features. The WLAN Pi team recently had a report from one of our kind users (thanks Juan! ) that during an over-the-air capture, the WLAN Pi appeared to be only capturing data frames running at basic rates. After further investigation by the WLAN Pi team, it became apparent that 802.11ac data frames that were sent using 2 spatial streams were not being captured. Single stream 802.11ac data frames were captured OK. 802.11n 1 & 2 spatial stream data frames and all legacy rate data frames were also captured with no issues. All management and control frames (which all run at legacy rates anyhow) were also fine. This is a suspected issue with the Realtek driver, so there is little we can do to fix the 2 stream 11ac capture issue. During testing, it was noted that there may be the occasional 2SS 11ac data frames observed, but this was sporadic and unpredictable. The issue has been reported by other users of the chipset driver, and we have added our own reports of the observed issue. The issue may be fixed at some stage, but as this issue appears to have been present for quite some time, this is unlikely to be fixed in the short-term. ( Note: Remember, the CF912 NIC is an 802.11ac, 2 stream device. Any data frames that use 802.11ac, 3 spatial streams will never be captured by the NIC. Also, no 802.11ax data frames can be captured by the NIC. )","title":"Issues With CF-912AC Frame Capture"},{"location":"admin/cf912_issues/#alternative-nic","text":"Since version 2.x of the WLAN Pi image, support for MediaTek USB wireless adapters has been included. The team has received reports that Linux driver support for the MediaTek adapters is generally better than for RealTek drivers (for the features that we wish to use). Testing by the team over the past few months has indicated that the MediaTek MT7612U driver seems to perform very well and has no issue with the 2-stream over-the-air capture. The Mediatek MT7612U adapter option has become a favourite among the developer team. However, sourcing a USB NIC that contains this chipset has not been without its challenges :) Internally, the dev team has settled on what is internally referred to as the \"no-name\" MediaTek adapter - this is an unbranded, generic adapter. The easiest place to source this adapter is currently the AliExpress store, and is available from many different suppliers. Here is once source that I have used: https://www.aliexpress.com/item/1005001510706842.html . If you search for the phrase \"New arrival Black MT7612U\" on Aliexepress , you will see that there are many suppliers of this USB dongle to choose from. When ordering, you can expect delivery to typically take a few weeks. ( Hopefully, perhaps some of our suppliers may pick up on this requirement and make these more easily available... )","title":"Alternative NIC"},{"location":"admin/cf912_issues/#nic-swap-out","text":"The good news is that if/when you obtain one of these adapters and have the orange-case WLAN Pi kit, it is very easy to swap out the CF-912 NIC inside the case for the no-name MT7612U adapter. I've provided a few photos below, taken when I swapped out my own CF-912 recently. In summary, you will need to: Remove the front panel sticker Use a hex spanner to undo the 3 retaining bolts Remove the micro-SD card Prise the plastic case top/bottom sections apart Take out the Neo2 Swap over the CF-912 USB NIC for the MT7612 USB NIC Put the Neo2 back in the case Put the case back together Re-insert the micro-SD card Re-install the retaining bolts Re-apply the front panel sticker WLAN Pi case & new MT7612U adapter Remove sticker to reveal 3 x securing bolts Remove the 3 hex-head bolts and make sure the micro-SD card is removed (flip over the case to locate the micro-SD card - press the card in and it will pop out on a spring release) Prise the two halves of the case apart to reveal the Neo2 and the CF-912 USB NIC Take the Neo2/USB NIC assembly out of the case Swap out the CF912 USB adapter for the new MT7612U adapter Put the Neo2/USB assembly back in to the bottom half of the case (making sure to locate the USB cable correctly in the provided cable channel) Clip the two halves of the case back together, re-insert the 3 retaining bolts, re-insert the micro-SD card and re-apply the sticker","title":"NIC Swap-out"},{"location":"admin/cf912_issues/#rpi-support","text":"Finally, another good reason to get hold of a MediaTek adapter is that if you have a Raspberry Pi, then the MediaTek adapter is supported on recent RPi images and will support monitor mode. This opens up interesting possibilities for using an RPi for remote over-the-air capture operations (e.g. capture with Wireshark (using the extcap plugin ) or a tool such as Airtool )","title":"RPi Support"},{"location":"admin/cf912_issues/#further-questions","text":"If you have any questions, please contact the WLAN Pi team via our discussions forum on GitHub . <-- back","title":"Further Questions"},{"location":"admin/change_pwd/","text":"Changing the password for the wlanpi user Changing the default password for the wlanpi user is highly recommended to help secure your unit. To change from the default password (which is 'wlanpi'), SSH to the WLANP Pi and use the 'passwd' command as follows: wlanpi@wlanpi:~$ passwd Changing password for wlanpi. (current) UNIX password: wlanpi Enter new UNIX password: <enter new pwd> Retype new UNIX password: <enter new pwd again> passwd: password updated successfully wlanpi@wlanpi:~$ If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences. <-- back","title":"Change the Password of the wlanpi User"},{"location":"admin/change_pwd/#changing-the-password-for-the-wlanpi-user","text":"Changing the default password for the wlanpi user is highly recommended to help secure your unit. To change from the default password (which is 'wlanpi'), SSH to the WLANP Pi and use the 'passwd' command as follows: wlanpi@wlanpi:~$ passwd Changing password for wlanpi. (current) UNIX password: wlanpi Enter new UNIX password: <enter new pwd> Retype new UNIX password: <enter new pwd again> passwd: password updated successfully wlanpi@wlanpi:~$ If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences. <-- back","title":"Changing the password for the wlanpi user"},{"location":"admin/hostname/","text":"Change the hostname of a WLAN Pi By default, the hostname of your WLAN Pi is : wlanpi If you'd like to change this to a more meaningful hostname, then you will need to SSH to your WLAN Pi and update the /etc/hostname and /etc/hosts files, followed by a reboot of the WLAN Pi: Edit the /etc/hostname file using the command: sudo nano /etc/hostname There is a single line that says 'wlanpi'. Change this to your required hostname. Then hit Ctrl-X and \"y\" to save your changes. Alternatively, you may also use the following CLI command to achieve the same result: sudo hostnamectl set-hostname <name> Whichever method is used to update the hostname file, next edit the /etc/hosts file: sudo nano /etc/hosts Change each instance of 'wlanpi' to the new hostname (there are usually two instances). Then hit Ctrl-X and \"y\" to save your changes. Finally, reboot your WLAN Pi: sudo reboot <-- back","title":"Change the hostname of a WLAN Pi"},{"location":"admin/hostname/#change-the-hostname-of-a-wlan-pi","text":"By default, the hostname of your WLAN Pi is : wlanpi If you'd like to change this to a more meaningful hostname, then you will need to SSH to your WLAN Pi and update the /etc/hostname and /etc/hosts files, followed by a reboot of the WLAN Pi: Edit the /etc/hostname file using the command: sudo nano /etc/hostname There is a single line that says 'wlanpi'. Change this to your required hostname. Then hit Ctrl-X and \"y\" to save your changes. Alternatively, you may also use the following CLI command to achieve the same result: sudo hostnamectl set-hostname <name> Whichever method is used to update the hostname file, next edit the /etc/hosts file: sudo nano /etc/hosts Change each instance of 'wlanpi' to the new hostname (there are usually two instances). Then hit Ctrl-X and \"y\" to save your changes. Finally, reboot your WLAN Pi: sudo reboot <-- back","title":"Change the hostname of a WLAN Pi"},{"location":"admin/timezone/","text":"Change the Timezone of a WLAN Pi By default, the WLAN Pi may not be configured to use your local timezone. This may cause timestamps in logs and other reporting areas to report times that are not correct for your locality. To configure your WLAN Pi to use your local timezone, access the CLI of the WLAN Pi and execute the following command to launch a wizard that will guide you through the timezone selection process. From the CLI of your WLAN Pi execute the following command to launch the on-screen text-based wizard to configure your local timezone: sudo dpkg-reconfigure tzdata <-- back","title":"Change the Timezone of a WLAN Pi"},{"location":"admin/timezone/#change-the-timezone-of-a-wlan-pi","text":"By default, the WLAN Pi may not be configured to use your local timezone. This may cause timestamps in logs and other reporting areas to report times that are not correct for your locality. To configure your WLAN Pi to use your local timezone, access the CLI of the WLAN Pi and execute the following command to launch a wizard that will guide you through the timezone selection process. From the CLI of your WLAN Pi execute the following command to launch the on-screen text-based wizard to configure your local timezone: sudo dpkg-reconfigure tzdata <-- back","title":"Change the Timezone of a WLAN Pi"},{"location":"admin/updating_packages/","text":"Updating WLAN Pi Packages TBA <-- back","title":"Updating WLAN Pi Packages"},{"location":"admin/updating_packages/#updating-wlan-pi-packages","text":"TBA <-- back","title":"Updating WLAN Pi Packages"},{"location":"admin/wifi_client/","text":"Connecting Your WLAN Pi to a Wireless Network Assuming your network uses a PSK, simply edit the following files: /etc/network/interfaces /etc/wpa_supplicant/wpa_supplicant.conf /etc/network/interfaces Edit the file as follows: sudo nano /etc/network/interfaces Edit the following section of the file for wlan0: # Wireless adapter #1 # Armbian ships with network-manager installed by default. To save you time # and hassles consider using 'sudo nmtui' instead of configuring Wi-Fi settings # manually. The below lines are only meant as an example how configuration could # be done in an anachronistic way: # allow-hotplug wlan0 iface wlan0 inet dhcp #address 192.168.0.100 #netmask 255.255.255.0 #gateway 192.168.0.1 #dns-nameservers 8.8.8.8 8.8.4.4 # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf # Disable power saving on compatible chipsets (prevents SSH/connection dropouts over WiFi) wireless-mode Monitor #wireless-power off Remove the \"#\" character from the start of the line: # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf Save the file by hitting CTRL-x /etc/wpa_supplicant/wpa_supplicant.conf Edit the file as follows: sudo nano /etc/wpa_supplicant/wpa_supplicant.conf <make your changes> CTRL-x Enter your SSID and PSK in the areas indicated in the file. For the new settings to take effect, you have 3 options: Unplug and re-insert your USB wireless NIC Issue the following command on the WLAN Pi CLI : sudo ifdown wlan0; sudo ifup wlan0 Reboot your WLAN Pi (remove the power or issue the sudo reboot command on the CLI) (For other security methods, look in the following file for configuration examples: /home/wlanpi/wiperf/conf/etc/wpa_supplicant/wpa_supplicant.conf) <-- back","title":"Connecting Your WLAN Pi to a Wireless Network"},{"location":"admin/wifi_client/#connecting-your-wlan-pi-to-a-wireless-network","text":"Assuming your network uses a PSK, simply edit the following files: /etc/network/interfaces /etc/wpa_supplicant/wpa_supplicant.conf","title":"Connecting Your WLAN Pi to a Wireless Network"},{"location":"admin/wifi_client/#etcnetworkinterfaces","text":"Edit the file as follows: sudo nano /etc/network/interfaces Edit the following section of the file for wlan0: # Wireless adapter #1 # Armbian ships with network-manager installed by default. To save you time # and hassles consider using 'sudo nmtui' instead of configuring Wi-Fi settings # manually. The below lines are only meant as an example how configuration could # be done in an anachronistic way: # allow-hotplug wlan0 iface wlan0 inet dhcp #address 192.168.0.100 #netmask 255.255.255.0 #gateway 192.168.0.1 #dns-nameservers 8.8.8.8 8.8.4.4 # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf # Disable power saving on compatible chipsets (prevents SSH/connection dropouts over WiFi) wireless-mode Monitor #wireless-power off Remove the \"#\" character from the start of the line: # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf Save the file by hitting CTRL-x","title":"/etc/network/interfaces"},{"location":"admin/wifi_client/#etcwpa_supplicantwpa_supplicantconf","text":"Edit the file as follows: sudo nano /etc/wpa_supplicant/wpa_supplicant.conf <make your changes> CTRL-x Enter your SSID and PSK in the areas indicated in the file. For the new settings to take effect, you have 3 options: Unplug and re-insert your USB wireless NIC Issue the following command on the WLAN Pi CLI : sudo ifdown wlan0; sudo ifup wlan0 Reboot your WLAN Pi (remove the power or issue the sudo reboot command on the CLI) (For other security methods, look in the following file for configuration examples: /home/wlanpi/wiperf/conf/etc/wpa_supplicant/wpa_supplicant.conf) <-- back","title":"/etc/wpa_supplicant/wpa_supplicant.conf"},{"location":"get_involved/","text":"Getting Involved with the WLANPi Project The WLANPi project is a community effort and we always welcome volunteers to contribute to our efforts. There are opportunities for coding, testing (no coding skills required) and documentation/web site support. To find out the different areas where you can help out, take a look at the following pages for more information: Coding for the WLAN Pi Contributing to development for non-coders Submitting bug reports Submitting feature/package suggestions If you'd like to be involved, please contact Jerry Olla or Nigel Bowden on Twitter or track them down via any well known search engine.","title":"Getting Involved"},{"location":"get_involved/#getting-involved-with-the-wlanpi-project","text":"The WLANPi project is a community effort and we always welcome volunteers to contribute to our efforts. There are opportunities for coding, testing (no coding skills required) and documentation/web site support. To find out the different areas where you can help out, take a look at the following pages for more information: Coding for the WLAN Pi Contributing to development for non-coders Submitting bug reports Submitting feature/package suggestions If you'd like to be involved, please contact Jerry Olla or Nigel Bowden on Twitter or track them down via any well known search engine.","title":"Getting Involved with the WLANPi Project"},{"location":"get_involved/get_involved_bugs/","text":"Getting Involved - Bug Reporting If you're a WLAN Pi user and you think you spot a bug that we need to know about, please drop us a bug report. The best method for doing this is to visit the WLAN Pi GitHub site and submit a bug report (note that this will require you to create a (free) GitHub account). If you visit the following page, you will be able to open a new issue: https://github.com/WLAN-Pi/wlanpi/issues If you hit the \"New Issue\" button, you will be presented with a form where you can enter the bug details. Please provide as much information as possible about: The image version being used (show on the WLAN Pi initial power-up home screen) How we can re-create the issue Any useful log files you may have been able to obtain (note that attachment files can be dragged in to the bug report form area) Any useful screen shots of pictures you have obtained to demonstrate the issue (note that attachment files can be dragged in to the bug report form area) Also, if possible, mark the issue as a bug using the label drop-down on the right of the web form. Once you have submitted the bug, an email alert will be generated to a team of people and it will be forwarded on to the relevant person by one of the team that picks it up. Please be patient when waiting for a response, as we are all volunteers doing this in our spare time. <-- back","title":"Getting Involved - Bug Reporting"},{"location":"get_involved/get_involved_bugs/#getting-involved-bug-reporting","text":"If you're a WLAN Pi user and you think you spot a bug that we need to know about, please drop us a bug report. The best method for doing this is to visit the WLAN Pi GitHub site and submit a bug report (note that this will require you to create a (free) GitHub account). If you visit the following page, you will be able to open a new issue: https://github.com/WLAN-Pi/wlanpi/issues If you hit the \"New Issue\" button, you will be presented with a form where you can enter the bug details. Please provide as much information as possible about: The image version being used (show on the WLAN Pi initial power-up home screen) How we can re-create the issue Any useful log files you may have been able to obtain (note that attachment files can be dragged in to the bug report form area) Any useful screen shots of pictures you have obtained to demonstrate the issue (note that attachment files can be dragged in to the bug report form area) Also, if possible, mark the issue as a bug using the label drop-down on the right of the web form. Once you have submitted the bug, an email alert will be generated to a team of people and it will be forwarded on to the relevant person by one of the team that picks it up. Please be patient when waiting for a response, as we are all volunteers doing this in our spare time. <-- back","title":"Getting Involved - Bug Reporting"},{"location":"get_involved/get_involved_coding/","text":"Getting Involved - Coding For the WLANPi If you have a project you'd like to develop for the WLAN Pi, or you'd like to improve some of our existing features, you may like to contribute some of your own code to the WLAN Pi initiative. The software running on the WLAN Pi tends to be from three different sources: Existing Linux open-source packages that we make available on the WLAN Pi Existing packages or Linux features that we configure and combine to provide a useful feature. These are usually glued together with bits of shell script or python to provide the required feature Software written from scratch by our team of volunteer developers. This tends to be software written in Python as so many people are currently keen to learn and hone their skills in this language, but we are not limited to just Python The range of skills among our developers varies widely. Many are learning, or are very keen to learn, to provide useful features for wireless network engineers through their coding efforts. We have beginners through to people who have bene looking at coding for several years. None of them (to my knowledge) are software developers as their main day job. The environment is very supportive of contributors of all skill levels. Development Workflow Our development workflow has evolved over the last year or so based on our experience of trying to develop for the WLAN Pi, together with input from a few members who have had some exposure to development processes. As we develop in a collaborative manner, we use GitHub for sharing code repositories and version control. It is worth spending some time getting up to speed with the basics of git and GitHub before jumping in to development efforts (there are plenty of tutorials on YouTube to help with this.) Having said this, many of us are still very new to git and the whole development process, so don't worry about being the only person who is struggling with understanding how this all fits together! :) In addition to GitHub, a large part of the development effort take place on a developer Slack community. This is where ideas, issues and suggestions are kicked around between contributors The development process has evolved as follows: An individual has a idea for a feature or software package they would like to build They may like to build some initial code and/or run the idea by other developers on the Slack community If the idea looks viable and is useful, a repository (repo) for the project is created by the originator of the idea. This is generally on the main WLAN Pi GitHub site, or may be on the originators own repo - either is fine as long as it is publicly available Development work is usually carried out on a 'dev' branch of the project repo. If others wish to contribute to the code, they may fork the repo and then submit a pull request to the dev branch of the project repo. The project repo owner can then review the code in the pull request before merging it in to the main project repo Once the code has reached a point where it is ready to be released as version to be used by others, it is merged in the master branch of the project repo by the repo owner. At this point, a release number is also assigned to the code within GitHub by assigning a release tag - this allows the code at a particular point in time to be retrieved if/when required. I found the following detailed guide on GitHub which details the process in much more detail and will probably answer most questions you have about the process : https://gist.github.com/Chaser324/ce0505fbed06b947d962 The fork and pull request steps that allows contribution by others may seem a little onerous and long-winded. But, this has been done to limit the number of people who have access to the main project repo for purposes of quality control and co-ordination of additions of software to each project. Conventions There are a few conventions that are well worth observing when developing or contributing code: Before starting work on any new features, code updates or new software modules, make sure that you touch base with the other developers on Slack. Our time as volunteers is very sparse, so we need to ensure we operate as efficiently as possible. There may already work under way to implement a similar feature or another module that has dependencies that need to be accounted for in the new code. Turning up with a new idea of fully functioning code may not be the best route to get an idea included in the next WLAN Pi image release - it may require work in other software modules to accommodate it or may even break existing code. Documentation: coding is the fun part of contributing for all of us. However, if you are the only person who knows how or why something works, then it may delay getting your code included. Each project should have a well written document to explain what the software does, how to install it, any dependencies and how to use it. Source code should be liberally sprinkled with embedded comments to explain how the software operates. If submitting a pull request, ensure that any existing documentation is also updated to include any new of changes to functionality that your code introduces (don't expect project owners to do your documentation) Version & release notes files: each project should have a file called 'version.txt' and a release_notes.txt file included in the root directory of the project. The 'version.txt' file should contain a version number that corresponds to the version release tag assigned in GitHub. Prior to release, alpha and beta designations may be used to indicate the code being reviewed is not yet a release version The 'release_notes.txt' file should contain a brief description of the new features, fixes or changes introduced in this release Special Notes For Development on Windows When developing using a dev environment on a Windows laptop, we have had a number of issues with end-of-line characters being incorrectly set due to the differences between line endings used in Linux & Windows systems. Windows uses a \"CRLF\" at the end of each line, but Linux uses a \"LF\", When uploading files to GitHub that use the Windows \"CRLF\" end-of-line, there can be unusual issues when the files are finally run on the WLAN Pi platform. The best way to avoid this issue is to add the following line to a \".gitattributes\" file in the root of each of your local repos (even cloned/forked repos) to ensure all line endings are \"LF\": * text eol=lf Some files need their execution bits set so that they are executable once downloaded to the WLAN Pi. Windows does not natively support the execution bit, so that it is not included when uploading files to GitHub. Please consult this article to ensure execute bits are set when developing on Windows: https://medium.com/@akash1233/change-file-permissions-when-working-with-git-repos-on-windows-ea22e34d5cee Final Thoughts We're all finding our way in this process of both developing and figuring out the best workflow for our requirements. The process is evolving over time, so please provide your input if there is a better way of doing things. Don't be too worried about diving out and figuring it al out - the main thing is to communicate with other folks so we can all move forwards together is a co-ordinated fashion. It's not easy at times as many of us are newbies, but we're a friendly bunch who are keen to push things forwards. (Newbie note: One thing I found very useful was to work with a more fully featured development environment, as opposed to the text editors I started out with. I do not have extensive experience of different dev environments, but the Visual Studio Code environment has been very useful for me...you might like to try it out too - it's free!) Links WLAN Pi GitHub site Git Visual Studio Code <-- back","title":"Getting Involved - Coding For the WLANPi"},{"location":"get_involved/get_involved_coding/#getting-involved-coding-for-the-wlanpi","text":"If you have a project you'd like to develop for the WLAN Pi, or you'd like to improve some of our existing features, you may like to contribute some of your own code to the WLAN Pi initiative. The software running on the WLAN Pi tends to be from three different sources: Existing Linux open-source packages that we make available on the WLAN Pi Existing packages or Linux features that we configure and combine to provide a useful feature. These are usually glued together with bits of shell script or python to provide the required feature Software written from scratch by our team of volunteer developers. This tends to be software written in Python as so many people are currently keen to learn and hone their skills in this language, but we are not limited to just Python The range of skills among our developers varies widely. Many are learning, or are very keen to learn, to provide useful features for wireless network engineers through their coding efforts. We have beginners through to people who have bene looking at coding for several years. None of them (to my knowledge) are software developers as their main day job. The environment is very supportive of contributors of all skill levels.","title":"Getting Involved - Coding For the WLANPi"},{"location":"get_involved/get_involved_coding/#development-workflow","text":"Our development workflow has evolved over the last year or so based on our experience of trying to develop for the WLAN Pi, together with input from a few members who have had some exposure to development processes. As we develop in a collaborative manner, we use GitHub for sharing code repositories and version control. It is worth spending some time getting up to speed with the basics of git and GitHub before jumping in to development efforts (there are plenty of tutorials on YouTube to help with this.) Having said this, many of us are still very new to git and the whole development process, so don't worry about being the only person who is struggling with understanding how this all fits together! :) In addition to GitHub, a large part of the development effort take place on a developer Slack community. This is where ideas, issues and suggestions are kicked around between contributors The development process has evolved as follows: An individual has a idea for a feature or software package they would like to build They may like to build some initial code and/or run the idea by other developers on the Slack community If the idea looks viable and is useful, a repository (repo) for the project is created by the originator of the idea. This is generally on the main WLAN Pi GitHub site, or may be on the originators own repo - either is fine as long as it is publicly available Development work is usually carried out on a 'dev' branch of the project repo. If others wish to contribute to the code, they may fork the repo and then submit a pull request to the dev branch of the project repo. The project repo owner can then review the code in the pull request before merging it in to the main project repo Once the code has reached a point where it is ready to be released as version to be used by others, it is merged in the master branch of the project repo by the repo owner. At this point, a release number is also assigned to the code within GitHub by assigning a release tag - this allows the code at a particular point in time to be retrieved if/when required. I found the following detailed guide on GitHub which details the process in much more detail and will probably answer most questions you have about the process : https://gist.github.com/Chaser324/ce0505fbed06b947d962 The fork and pull request steps that allows contribution by others may seem a little onerous and long-winded. But, this has been done to limit the number of people who have access to the main project repo for purposes of quality control and co-ordination of additions of software to each project.","title":"Development Workflow"},{"location":"get_involved/get_involved_coding/#conventions","text":"There are a few conventions that are well worth observing when developing or contributing code: Before starting work on any new features, code updates or new software modules, make sure that you touch base with the other developers on Slack. Our time as volunteers is very sparse, so we need to ensure we operate as efficiently as possible. There may already work under way to implement a similar feature or another module that has dependencies that need to be accounted for in the new code. Turning up with a new idea of fully functioning code may not be the best route to get an idea included in the next WLAN Pi image release - it may require work in other software modules to accommodate it or may even break existing code. Documentation: coding is the fun part of contributing for all of us. However, if you are the only person who knows how or why something works, then it may delay getting your code included. Each project should have a well written document to explain what the software does, how to install it, any dependencies and how to use it. Source code should be liberally sprinkled with embedded comments to explain how the software operates. If submitting a pull request, ensure that any existing documentation is also updated to include any new of changes to functionality that your code introduces (don't expect project owners to do your documentation) Version & release notes files: each project should have a file called 'version.txt' and a release_notes.txt file included in the root directory of the project. The 'version.txt' file should contain a version number that corresponds to the version release tag assigned in GitHub. Prior to release, alpha and beta designations may be used to indicate the code being reviewed is not yet a release version The 'release_notes.txt' file should contain a brief description of the new features, fixes or changes introduced in this release","title":"Conventions"},{"location":"get_involved/get_involved_coding/#special-notes-for-development-on-windows","text":"When developing using a dev environment on a Windows laptop, we have had a number of issues with end-of-line characters being incorrectly set due to the differences between line endings used in Linux & Windows systems. Windows uses a \"CRLF\" at the end of each line, but Linux uses a \"LF\", When uploading files to GitHub that use the Windows \"CRLF\" end-of-line, there can be unusual issues when the files are finally run on the WLAN Pi platform. The best way to avoid this issue is to add the following line to a \".gitattributes\" file in the root of each of your local repos (even cloned/forked repos) to ensure all line endings are \"LF\": * text eol=lf Some files need their execution bits set so that they are executable once downloaded to the WLAN Pi. Windows does not natively support the execution bit, so that it is not included when uploading files to GitHub. Please consult this article to ensure execute bits are set when developing on Windows: https://medium.com/@akash1233/change-file-permissions-when-working-with-git-repos-on-windows-ea22e34d5cee","title":"Special Notes For Development on Windows"},{"location":"get_involved/get_involved_coding/#final-thoughts","text":"We're all finding our way in this process of both developing and figuring out the best workflow for our requirements. The process is evolving over time, so please provide your input if there is a better way of doing things. Don't be too worried about diving out and figuring it al out - the main thing is to communicate with other folks so we can all move forwards together is a co-ordinated fashion. It's not easy at times as many of us are newbies, but we're a friendly bunch who are keen to push things forwards. (Newbie note: One thing I found very useful was to work with a more fully featured development environment, as opposed to the text editors I started out with. I do not have extensive experience of different dev environments, but the Visual Studio Code environment has been very useful for me...you might like to try it out too - it's free!)","title":"Final Thoughts"},{"location":"get_involved/get_involved_coding/#links","text":"WLAN Pi GitHub site Git Visual Studio Code <-- back","title":"Links"},{"location":"get_involved/get_involved_non_coding/","text":"Getting Involved - I'm Not a Coder! The WLANPi project is a community effort and we welcome volunteers to contribute to our efforts. Most folks who join the project are interested in the \"cool\" coding part of the project. But, the truth is that without rigorous testing and good quality documentation, the quality of the delivered project is likely to be compromised. Even if you are not a coder, but would still like to be involved with the project, we need people like you to test code and ensure that documentation is up to scratch. Every time that code is updated, things will break - carefully testing the code is a critical activity before we release it out to the user base. Each time we release a new image version, we catch many unexpected bugs due to beta testing. This requires significant effort and we really need more help with writing test plans and executing test suites. Once we have new code ready to go, we also need to make sure it is sufficiently documented so that our user base are able to use it. Again, coding is the \"sexy\" part of the project that many tend to focus on. But, if people don't know how to use the code, the developers have wasted their time. We need people to help to create, edit and maintain the documentation that ensures users can use the full suite of WLAN Pi features. If you'd like to be involved in any of these areas, please contact Jerry Olla or Nigel Bowden on Twitter or track them down via any well known search engine. <-- back","title":"Getting Involved - I'm Not a Coder!"},{"location":"get_involved/get_involved_non_coding/#getting-involved-im-not-a-coder","text":"The WLANPi project is a community effort and we welcome volunteers to contribute to our efforts. Most folks who join the project are interested in the \"cool\" coding part of the project. But, the truth is that without rigorous testing and good quality documentation, the quality of the delivered project is likely to be compromised. Even if you are not a coder, but would still like to be involved with the project, we need people like you to test code and ensure that documentation is up to scratch. Every time that code is updated, things will break - carefully testing the code is a critical activity before we release it out to the user base. Each time we release a new image version, we catch many unexpected bugs due to beta testing. This requires significant effort and we really need more help with writing test plans and executing test suites. Once we have new code ready to go, we also need to make sure it is sufficiently documented so that our user base are able to use it. Again, coding is the \"sexy\" part of the project that many tend to focus on. But, if people don't know how to use the code, the developers have wasted their time. We need people to help to create, edit and maintain the documentation that ensures users can use the full suite of WLAN Pi features. If you'd like to be involved in any of these areas, please contact Jerry Olla or Nigel Bowden on Twitter or track them down via any well known search engine. <-- back","title":"Getting Involved - I'm Not a Coder!"},{"location":"get_involved/get_involved_requests/","text":"Getting Involved - Feature Requests Once you've been using the WLAN Pi for a while, you'll probably start to think: \"wouldn't it be great if the WLAN Pi could do xyz?\" , or: \"wouldn't it be great if package x were available on the WLAN Pi?\" If you have any suggestions that you think are worthy of consideration, then please open a feature request on GitHub. It will be considered for addition to our roadmap. If you're have some coding skills, it may even be worth offering to code it yourself and maybe pull together some proof of concept code. If you submit a suggestion, please remember that we are a group of volunteers doing this work in our spare time, so it may take some time for us to get back to you. To submit a feature request/suggestion, submit a request via the GitHub issues feature (note that this will require you to create a (free) GitHub account). If you visit the following page, you will be able to open a new request: https://github.com/WLAN-Pi/wlanpi/issues If you hit the \"New Issue\" button, you will be presented with a form where you can enter the feature request details. Please provide as much information as possible about your idea/request. Links to web sites of existing linux or similar packages (if applicable), screen shots and sample code will all help if available. Also, if possible, mark the request as a enhancement using the label drop-down on the right of the web form. Once you have submitted the request, an email alert will be generated to a team of people and it will be forwarded on to the relevant person by one of the team that picks it up. Please be patient when waiting for a response, as we are all volunteers doing this in our spare time. <-- back","title":"Getting Involved - Feature Requests"},{"location":"get_involved/get_involved_requests/#getting-involved-feature-requests","text":"Once you've been using the WLAN Pi for a while, you'll probably start to think: \"wouldn't it be great if the WLAN Pi could do xyz?\" , or: \"wouldn't it be great if package x were available on the WLAN Pi?\" If you have any suggestions that you think are worthy of consideration, then please open a feature request on GitHub. It will be considered for addition to our roadmap. If you're have some coding skills, it may even be worth offering to code it yourself and maybe pull together some proof of concept code. If you submit a suggestion, please remember that we are a group of volunteers doing this work in our spare time, so it may take some time for us to get back to you. To submit a feature request/suggestion, submit a request via the GitHub issues feature (note that this will require you to create a (free) GitHub account). If you visit the following page, you will be able to open a new request: https://github.com/WLAN-Pi/wlanpi/issues If you hit the \"New Issue\" button, you will be presented with a form where you can enter the feature request details. Please provide as much information as possible about your idea/request. Links to web sites of existing linux or similar packages (if applicable), screen shots and sample code will all help if available. Also, if possible, mark the request as a enhancement using the label drop-down on the right of the web form. Once you have submitted the request, an email alert will be generated to a team of people and it will be forwarded on to the relevant person by one of the team that picks it up. Please be patient when waiting for a response, as we are all volunteers doing this in our spare time. <-- back","title":"Getting Involved - Feature Requests"},{"location":"get_started/","text":"Getting Started with the WLAN Pi User Guide If you have your WLAN Pi hardware and you'd like to find out what you can do with your WLAN Pi, you can check out this user guide . This guide is a couple of years old now, but has some great information providing you with more background to the WLAN Pi and will get you going with some of its great utilities. Info User Guide Hardware To get started with the WLAN Pi, you're going to need to get hold of some WLAN Pi hardware. The items you'll need are all generally low cost and relatively easy to source. There are a few options available to get yourself set up with a WLAN Pi: Attend a WLPC conference and complete one of the WLAN Pi deep dive sessions Buy a complete kit from the WLPC online store Source the individual items you'll need yourself from various suppliers. Obviously, buying the kit from the WLPC store is a quick and easy option. You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. However, if you're a nuts & bolts type of person who likes to roll up your sleeves and build stuff yourself, you can source the various component parts yourself and build from scratch . (This will likely take you quite a lot longer to do compared to buying the kit, but arguably may be more fun and slightly cheaper). Check out the links below for more information: Buying a Kit Build Your Own From Scratch Note Looking for supported wireless adapter types? Check here","title":"Getting Started"},{"location":"get_started/#getting-started-with-the-wlan-pi","text":"","title":"Getting Started with the WLAN Pi"},{"location":"get_started/#user-guide","text":"If you have your WLAN Pi hardware and you'd like to find out what you can do with your WLAN Pi, you can check out this user guide . This guide is a couple of years old now, but has some great information providing you with more background to the WLAN Pi and will get you going with some of its great utilities. Info User Guide","title":"User Guide"},{"location":"get_started/#hardware","text":"To get started with the WLAN Pi, you're going to need to get hold of some WLAN Pi hardware. The items you'll need are all generally low cost and relatively easy to source. There are a few options available to get yourself set up with a WLAN Pi: Attend a WLPC conference and complete one of the WLAN Pi deep dive sessions Buy a complete kit from the WLPC online store Source the individual items you'll need yourself from various suppliers. Obviously, buying the kit from the WLPC store is a quick and easy option. You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. However, if you're a nuts & bolts type of person who likes to roll up your sleeves and build stuff yourself, you can source the various component parts yourself and build from scratch . (This will likely take you quite a lot longer to do compared to buying the kit, but arguably may be more fun and slightly cheaper). Check out the links below for more information: Buying a Kit Build Your Own From Scratch Note Looking for supported wireless adapter types? Check here","title":"Hardware"},{"location":"get_started/getting_started_build_your_own/","text":"Getting Started with the WLAN Pi Building Your Own Kit Rolling your own WLAN Pi takes a little more work than a pre-built kit, but with a little effort, you can source all of the parts and put one together. Here is a list of the items you are going to need to source to build your own WLAN Pi: A NanoPi NEO2 from the FriendlyArm company (located in China): this is the WLAN Pi hardware platform itself (Note that this comes with a micro-SD card, so you do not need to purchase a separate card unless you want a spare ) A Comfast CF-912 USB wireless adapter: this is the currently recommended adapter to support the various wireless operations that the WLAN Pi supports (you can usually get these fom eBay or Amazon ) An micro-SD to USB adapter module to allow images to be burned on to the WLAN Pi (easily sourced fom Amazon ) A USB to micro-USB cable to power and/or provide connectivity to the WLAN Pi (the flavour of USB cable will depend on your requirements) Optional extra items: A power supply . The Raspberry Pi PSUs work fine with the WLAN Pi and are readily available from Amazon (Note that you can also use your USB to micro USB cable with a phone charger PSU in many cases if you'd prefer not to buy a dedicated PSU) POE Splitter . If you'd like to power your WLAN Pi from a switch POE port, a splitter is just what you need. However, ensure that you buy a splitter that supports Gigabit-Ethernet , as many low-cost POE splitters are only 100mbps Ethernet (which is not great when you are using the WLAN Pi for speedtests or iperf). Lithium battery (in case you want to leave the WLAN Pi powered on for a few hours somewhere) Extra micro-SD card (in case you'd like a spare for different image versions or customizations) Custom Handheld Case : Designed specifically for use with the WLAN Pi, houses the Wi-Fi adapter and USB-C cable, while still exposing the USB port and ethernet port on the bottom, while still allowing access to the MicroSD slot - a great addition to make the WLAN Pi in to a true hand-held tester! (Created by Joel Crane @Potato_Fi Info Want to 3D print your own case? Check out the following links: https://www.prusaprinters.org/prints/16184-wlan-pi-handheld-case http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html (Note: some the the links on this page are Amazon affiliate links)","title":"How to get started with the WLAN Pi"},{"location":"get_started/getting_started_build_your_own/#getting-started-with-the-wlan-pi","text":"","title":"Getting Started with the WLAN Pi"},{"location":"get_started/getting_started_build_your_own/#building-your-own-kit","text":"Rolling your own WLAN Pi takes a little more work than a pre-built kit, but with a little effort, you can source all of the parts and put one together. Here is a list of the items you are going to need to source to build your own WLAN Pi: A NanoPi NEO2 from the FriendlyArm company (located in China): this is the WLAN Pi hardware platform itself (Note that this comes with a micro-SD card, so you do not need to purchase a separate card unless you want a spare ) A Comfast CF-912 USB wireless adapter: this is the currently recommended adapter to support the various wireless operations that the WLAN Pi supports (you can usually get these fom eBay or Amazon ) An micro-SD to USB adapter module to allow images to be burned on to the WLAN Pi (easily sourced fom Amazon ) A USB to micro-USB cable to power and/or provide connectivity to the WLAN Pi (the flavour of USB cable will depend on your requirements) Optional extra items: A power supply . The Raspberry Pi PSUs work fine with the WLAN Pi and are readily available from Amazon (Note that you can also use your USB to micro USB cable with a phone charger PSU in many cases if you'd prefer not to buy a dedicated PSU) POE Splitter . If you'd like to power your WLAN Pi from a switch POE port, a splitter is just what you need. However, ensure that you buy a splitter that supports Gigabit-Ethernet , as many low-cost POE splitters are only 100mbps Ethernet (which is not great when you are using the WLAN Pi for speedtests or iperf). Lithium battery (in case you want to leave the WLAN Pi powered on for a few hours somewhere) Extra micro-SD card (in case you'd like a spare for different image versions or customizations) Custom Handheld Case : Designed specifically for use with the WLAN Pi, houses the Wi-Fi adapter and USB-C cable, while still exposing the USB port and ethernet port on the bottom, while still allowing access to the MicroSD slot - a great addition to make the WLAN Pi in to a true hand-held tester! (Created by Joel Crane @Potato_Fi Info Want to 3D print your own case? Check out the following links: https://www.prusaprinters.org/prints/16184-wlan-pi-handheld-case http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html (Note: some the the links on this page are Amazon affiliate links)","title":"Building Your Own Kit"},{"location":"get_started/getting_started_buy_kit/","text":"Getting Started with the WLAN Pi Buying a Kit If you'd like to buy a pre-built kit, check out our suppliers page . We'll keep this updated with kit buying options. One of the easiest options is to buy the kit from the WLPC store . You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. ( However, if you're a nuts & bolts type of person who like to roll up your sleeves and build stuff yourself, check out our \"build your own kit page\" )","title":"How to get started with the WLAN Pi"},{"location":"get_started/getting_started_buy_kit/#getting-started-with-the-wlan-pi","text":"","title":"Getting Started with the WLAN Pi"},{"location":"get_started/getting_started_buy_kit/#buying-a-kit","text":"If you'd like to buy a pre-built kit, check out our suppliers page . We'll keep this updated with kit buying options. One of the easiest options is to buy the kit from the WLPC store . You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. ( However, if you're a nuts & bolts type of person who like to roll up your sleeves and build stuff yourself, check out our \"build your own kit page\" )","title":"Buying a Kit"},{"location":"toolset/pkg_analysis_extcap/","text":"extcap The extcap project was originally created by Adrian Granados. The utility is a wrapper around the SSHDump feature provided in Wireshark 3.x. Extcap feature is not actually a package on the WLAN Pi, but is an external utility that allows the WLAN Pi to be used as a remote capture device using Wireshark. It needs to be installed on the laptop where Wireshark is installed. It also provides additional options within Wireshark to allow the configuration of the WLAN Pi device to start a remote wireless frame capture. A Windows version of the extcap project was created by Nigel Bowden, providing a Windows-native version of the utility. The video below shows how to use the extcap feature in Wireshark, using the WLAN Pi as a capture source. Checkout these useful links for more information about extcap: Wireshark Plugin To Capture Wireless Frames Using a WLANPi (Windows 10) Githib: Wireshark extcap interface for remote wireless captures Github: Wxtcap for Windows","title":"Extcap"},{"location":"toolset/pkg_analysis_extcap/#extcap","text":"The extcap project was originally created by Adrian Granados. The utility is a wrapper around the SSHDump feature provided in Wireshark 3.x. Extcap feature is not actually a package on the WLAN Pi, but is an external utility that allows the WLAN Pi to be used as a remote capture device using Wireshark. It needs to be installed on the laptop where Wireshark is installed. It also provides additional options within Wireshark to allow the configuration of the WLAN Pi device to start a remote wireless frame capture. A Windows version of the extcap project was created by Nigel Bowden, providing a Windows-native version of the utility. The video below shows how to use the extcap feature in Wireshark, using the WLAN Pi as a capture source. Checkout these useful links for more information about extcap: Wireshark Plugin To Capture Wireless Frames Using a WLANPi (Windows 10) Githib: Wireshark extcap interface for remote wireless captures Github: Wxtcap for Windows","title":"extcap"},{"location":"toolset/pkg_analysis_scapy/","text":"Scapy TBA","title":"Scapy"},{"location":"toolset/pkg_analysis_scapy/#scapy","text":"TBA","title":"Scapy"},{"location":"toolset/pkg_perf_iperf/","text":"iperf iperf is a tool for performing network throughput measurements. It can test either TCP or UDP throughput. To perform an iperf test the user must establish both a server (to receive traffic) and a client (to generate traffic). The WLAN Pi has iperf2 and iperf3 servers running upon start-up, these servers are using the default options for each version. For reference, iperf uses the following ports: iperf2 - 5001 iperf3 - 5201 Iperf3 is a rewrite of iperf from scratch to create a smaller, simpler code base. Iperf3 is not backwards compatible with iperf2. Usage To view all iperf options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages) or use the -h or --help flag for listing of the commands: man iperf iperf -h man iperf3 iperf3 -h Examples Basic throughput test (Note that by default, iperf tests using TCP. To use UDP, see later examples.) iperf -c <server_ip> iperf3 -c <server_ip> Displaying data formatted in different units. The units that in which results are displayed (i.e. Kilobits per sec, Megabits per sec etc.) may be modified using the following command attributes: iperf -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf3 -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf from server to client (reverse direction test) or bi-directional test iperf -c <server_ip> -r -d iperf3 -c <server_ip> -R or iperf3 -c <server_ip> --bidir iperf using udp iperf -c <server_ip> -u iperf3 -c <server_ip> -u References The following references may be useful for further information about iperf: iperf home page iPerf2 vs iPerf3 | Panos Vouzis | WLPC Phoenix 2020 It's not the Network | Panos Vouzis | WLPC Phoenix 2018 (Contributed by Ian Stout)","title":"iperf"},{"location":"toolset/pkg_perf_iperf/#iperf","text":"iperf is a tool for performing network throughput measurements. It can test either TCP or UDP throughput. To perform an iperf test the user must establish both a server (to receive traffic) and a client (to generate traffic). The WLAN Pi has iperf2 and iperf3 servers running upon start-up, these servers are using the default options for each version. For reference, iperf uses the following ports: iperf2 - 5001 iperf3 - 5201 Iperf3 is a rewrite of iperf from scratch to create a smaller, simpler code base. Iperf3 is not backwards compatible with iperf2.","title":"iperf"},{"location":"toolset/pkg_perf_iperf/#usage","text":"To view all iperf options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages) or use the -h or --help flag for listing of the commands: man iperf iperf -h man iperf3 iperf3 -h","title":"Usage"},{"location":"toolset/pkg_perf_iperf/#examples","text":"","title":"Examples"},{"location":"toolset/pkg_perf_iperf/#basic-throughput-test","text":"(Note that by default, iperf tests using TCP. To use UDP, see later examples.) iperf -c <server_ip> iperf3 -c <server_ip>","title":"Basic throughput test"},{"location":"toolset/pkg_perf_iperf/#displaying-data-formatted-in-different-units","text":"The units that in which results are displayed (i.e. Kilobits per sec, Megabits per sec etc.) may be modified using the following command attributes: iperf -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf3 -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T)","title":"Displaying data formatted in different units."},{"location":"toolset/pkg_perf_iperf/#iperf-from-server-to-client-reverse-direction-test-or-bi-directional-test","text":"iperf -c <server_ip> -r -d iperf3 -c <server_ip> -R or iperf3 -c <server_ip> --bidir","title":"iperf from server to client (reverse direction test) or bi-directional test"},{"location":"toolset/pkg_perf_iperf/#iperf-using-udp","text":"iperf -c <server_ip> -u iperf3 -c <server_ip> -u","title":"iperf using udp"},{"location":"toolset/pkg_perf_iperf/#references","text":"The following references may be useful for further information about iperf: iperf home page iPerf2 vs iPerf3 | Panos Vouzis | WLPC Phoenix 2020 It's not the Network | Panos Vouzis | WLPC Phoenix 2018 (Contributed by Ian Stout)","title":"References"},{"location":"toolset/pkg_perf_speedtest/","text":"Speedtest TBA","title":"Speedtest"},{"location":"toolset/pkg_perf_speedtest/#speedtest","text":"TBA","title":"Speedtest"},{"location":"toolset/pkg_util_hotspot/","text":"Hotspot Mode Hotspot mode allows the WLAN Pi to become a small-scale AP to allow a variety of tests to be performed. It broadcasts an SSID, allowing the WLAN Pi to be used as a source for wall attenuation measurements ( see this article ). It may also be used to associate a client and perform speedtest measurements using the WLAN Pi's speedtest and iperf capabilities. Finally, it also supports forwarding so that the WLAN Pi may also be connected to an Ethernet port while in hotspot mode and allow a wireless client to connect through to wired network. To access hotspot mode, on the WLAN Pi front panel, select : Menu > Mode > Hotspot References: GitHub site WLAN Pi - Setup a Wi-Fi Hotspot (blog) WLAN Pi - Bridge Wi-Fi Hotspot to Ethernet Interface","title":"Hotspot Mode"},{"location":"toolset/pkg_util_hotspot/#hotspot-mode","text":"Hotspot mode allows the WLAN Pi to become a small-scale AP to allow a variety of tests to be performed. It broadcasts an SSID, allowing the WLAN Pi to be used as a source for wall attenuation measurements ( see this article ). It may also be used to associate a client and perform speedtest measurements using the WLAN Pi's speedtest and iperf capabilities. Finally, it also supports forwarding so that the WLAN Pi may also be connected to an Ethernet port while in hotspot mode and allow a wireless client to connect through to wired network. To access hotspot mode, on the WLAN Pi front panel, select : Menu > Mode > Hotspot","title":"Hotspot Mode"},{"location":"toolset/pkg_util_hotspot/#references","text":"GitHub site WLAN Pi - Setup a Wi-Fi Hotspot (blog) WLAN Pi - Bridge Wi-Fi Hotspot to Ethernet Interface","title":"References:"},{"location":"toolset/pkg_util_profiler/","text":"Profiler The profiler utility is used to determine the 802.11 capabilities of wireless clients. This information is invaluable when designing a wireless LAN, as client characteristics need to be fully understood for the design process. It works by creating a \"dummy AP\" which broadcasts a test SSID. Clients that need to be profiled then attempt to associated with the test SSID. Although the clients cannot join the SSID, their association frames are captured and analyzed to reveal their characteristics. A textual report for each client is created and stored on the WLAN Pi - this may be accessed via the WLAN Pi web GUI. TBA - New information pending for V2.x.x image","title":"Profiler"},{"location":"toolset/pkg_util_profiler/#profiler","text":"The profiler utility is used to determine the 802.11 capabilities of wireless clients. This information is invaluable when designing a wireless LAN, as client characteristics need to be fully understood for the design process. It works by creating a \"dummy AP\" which broadcasts a test SSID. Clients that need to be profiled then attempt to associated with the test SSID. Although the clients cannot join the SSID, their association frames are captured and analyzed to reveal their characteristics. A textual report for each client is created and stored on the WLAN Pi - this may be accessed via the WLAN Pi web GUI. TBA - New information pending for V2.x.x image","title":"Profiler"},{"location":"toolset/pkg_util_wconsole/","text":"Wi-Fi Console Turn your WLANPi in to a wireless serial console cable It can be annoying to have to sit in an equipment room to use the serial console port on an item of networking equipment. This project allows you to use a WLANPi to connect to your serial console cable via a Wi-Fi link while sat in the comfort of a nearby office, rather than sat with your laptop on the equipment room floor :) The video below provides a demonstration of using wconsole: Checkout these useful links for more information: Wi-Fi Console GitHub page Instructional video from WiFiNigel","title":"The Wi-Fi Console Utility"},{"location":"toolset/pkg_util_wconsole/#wi-fi-console","text":"Turn your WLANPi in to a wireless serial console cable It can be annoying to have to sit in an equipment room to use the serial console port on an item of networking equipment. This project allows you to use a WLANPi to connect to your serial console cable via a Wi-Fi link while sat in the comfort of a nearby office, rather than sat with your laptop on the equipment room floor :) The video below provides a demonstration of using wconsole: Checkout these useful links for more information: Wi-Fi Console GitHub page Instructional video from WiFiNigel","title":"Wi-Fi Console"},{"location":"toolset/pkg_util_wiperf/","text":"Wiperf The WLAN Pi wiperf mode allows you to turn your WLAN Pi in to a wireless client device that runs a series of connectivity and performance tests and reports them back in to Splunk. To find out more about wiperf , please visit the main wiperf project page: link","title":"Wiperf - a remote Wi-Fi performance probe"},{"location":"toolset/pkg_util_wiperf/#wiperf","text":"The WLAN Pi wiperf mode allows you to turn your WLAN Pi in to a wireless client device that runs a series of connectivity and performance tests and reports them back in to Splunk. To find out more about wiperf , please visit the main wiperf project page: link","title":"Wiperf"},{"location":"toolset/toolset/","text":"Toolset The WLANPi image is supplied with a number of useful networking programs, utilities and scripts to help the WLAN professional out in the field. An overview of each of these packages is provided in this section. Perf Measurement HTML Speedtest iPerf Ookla Speedtest Analysis Scapy Tcpdump extcap Uilities Wi-Fi Console Hotspot Mode Wiperf Profiler","title":"Toolset"},{"location":"toolset/toolset/#toolset","text":"The WLANPi image is supplied with a number of useful networking programs, utilities and scripts to help the WLAN professional out in the field. An overview of each of these packages is provided in this section. Perf Measurement HTML Speedtest iPerf Ookla Speedtest Analysis Scapy Tcpdump extcap Uilities Wi-Fi Console Hotspot Mode Wiperf Profiler","title":"Toolset"},{"location":"v1/","text":"Version 1 WLAN Pi Documentation Project Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi initiative started at the Wireless LAN Professionals Conference in 2016. Since then, the WLAN Pi has grown in to a popular addition to the toolset of many WLAN engineers. The project is constantly adding and improving the tools available on the WLAN Pi platform to provide a richer toolset to our loyal base of users. This site has been created to provide supporting documentation to the project, to make the WLAN Pi even more accessible to new and existing users. On this site we will provide information to enable you to buy or build your own WLAN Pi, detail the packages available on the current WLAN Pi image and provide update information about the WLAN Pi project. Info If you're new to the WLAN Pi project, a great place to start is our Getting Started page. Attention Check out common queries in our FAQ section","title":"Home"},{"location":"v1/#version-1-wlan-pi-documentation-project","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi initiative started at the Wireless LAN Professionals Conference in 2016. Since then, the WLAN Pi has grown in to a popular addition to the toolset of many WLAN engineers. The project is constantly adding and improving the tools available on the WLAN Pi platform to provide a richer toolset to our loyal base of users. This site has been created to provide supporting documentation to the project, to make the WLAN Pi even more accessible to new and existing users. On this site we will provide information to enable you to buy or build your own WLAN Pi, detail the packages available on the current WLAN Pi image and provide update information about the WLAN Pi project. Info If you're new to the WLAN Pi project, a great place to start is our Getting Started page. Attention Check out common queries in our FAQ section","title":"Version 1 WLAN Pi Documentation Project"},{"location":"v1/about/","text":"About Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi project started in 2016 at WLPC . The goal was to create a portable, ready-to-use device that could function as a network endpoint for measuring network performance and throughput. Since then, it has been widely embraced in the awesome wireless community and after many contributions, this tiny box has evolved well beyond a network performance testing device. Today, it can also be used as a remote Wi-Fi scanner, packet capture tool, portable Wi-Fi signal generator and much more! These capabilities assist wireless professionals with designing better wireless networks, troubleshooting issues more quickly, and validating wireless network performance. Hardware There are two main component parts to the WLAN Pi: a NEO2 hardware platform and a wireless adapter. Other useful assessories are available, but these are the two must-have components to get yourself up and running with a WLAN Pi. See our Getting Started page to find out how you can get your own WLAN Pi setup. NEO2 At the heart of the WLAN Pi is the NanoPi NEO2, a super tiny quad-core single-board computer (SBC). The NanoPi NEO2 shares some similarities to the more well known Raspberry Pi, however the NanoPi is less than \u00bd its size, consumes less power, and it can push over 900 Mbps over its gigabit ethernet connection. Specs: CPU: Allwinner H5, Quad-core 64-bit high-performance Cortex A53 DDR3 RAM: 1GB Storage: microSD (16 GB card included), can be expanded up to 128GB More info: http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2 Wi-Fi Adapter The Wi-Fi adapter is a Comfast CF-912ac. It uses the Realtek rtl8812au chipset, one of the few 802.11ac chipsets that support monitor mode and packet injection in linux. Specs: Dual-band, 2x2:2, 802.11ac","title":"About"},{"location":"v1/about/#about","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi project started in 2016 at WLPC . The goal was to create a portable, ready-to-use device that could function as a network endpoint for measuring network performance and throughput. Since then, it has been widely embraced in the awesome wireless community and after many contributions, this tiny box has evolved well beyond a network performance testing device. Today, it can also be used as a remote Wi-Fi scanner, packet capture tool, portable Wi-Fi signal generator and much more! These capabilities assist wireless professionals with designing better wireless networks, troubleshooting issues more quickly, and validating wireless network performance.","title":"About"},{"location":"v1/about/#hardware","text":"There are two main component parts to the WLAN Pi: a NEO2 hardware platform and a wireless adapter. Other useful assessories are available, but these are the two must-have components to get yourself up and running with a WLAN Pi. See our Getting Started page to find out how you can get your own WLAN Pi setup.","title":"Hardware"},{"location":"v1/about/#neo2","text":"At the heart of the WLAN Pi is the NanoPi NEO2, a super tiny quad-core single-board computer (SBC). The NanoPi NEO2 shares some similarities to the more well known Raspberry Pi, however the NanoPi is less than \u00bd its size, consumes less power, and it can push over 900 Mbps over its gigabit ethernet connection. Specs: CPU: Allwinner H5, Quad-core 64-bit high-performance Cortex A53 DDR3 RAM: 1GB Storage: microSD (16 GB card included), can be expanded up to 128GB More info: http://wiki.friendlyarm.com/wiki/index.php/NanoPi_NEO2","title":"NEO2"},{"location":"v1/about/#wi-fi-adapter","text":"The Wi-Fi adapter is a Comfast CF-912ac. It uses the Realtek rtl8812au chipset, one of the few 802.11ac chipsets that support monitor mode and packet injection in linux. Specs: Dual-band, 2x2:2, 802.11ac","title":"Wi-Fi Adapter"},{"location":"v1/faq/","text":"FAQ Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Where can I get the latest WLAN Pi image? The latest WLAN Pi image is available here (avoid the alpha releases, they are unstable, development builds, Beta are usually pretty good but may have the odd bug) How do I find which image version is currently installed on my WLAN? If you look on the top-level \"home\" page of the front panel display, the version number of the image should be shown on the top left of the display. If you see no version number, it may be that you have quite an old version of image. If you have network connectivity to the WLAN Pi, browse to it (192.168.42.1 if you're on the USB OTG connection) and look at the top of the web page to see the image version. How do I burn a WLAN Pi image? If you'd like to burn a WLAN Pi image on to a kit you've bought or update the image of your existing WLAN Pi, here is a video explaining the process: How do I change the password for the wlanpi user Changing the default password for the wlanpi user is highly recommended to help secure your unit. To change from the default password (which is 'wlanpi'), SSH to the WLANP Pi and use the 'passwd' command as follows: wlanpi@wlanpi:~$ passwd Changing password for wlanpi. (current) UNIX password: wlanpi Enter new UNIX password: <enter new pwd> Retype new UNIX password: <enter new pwd again> passwd: password updated successfully wlanpi@wlanpi:~$ If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences. How do I change the hostname of my WLAN Pi By default, the hostname of your WLAN Pi is : wlanpi If you'd like to change this to a more meaningful hostname, then you will need to SSH to your WLAN Pi and update the /etc/hostname and /etc/hosts files, followed by a reboot of the WLAN Pi: Edit the /etc/hostname file using the command: sudo nano /etc/hostname There is a single line that says 'wlanpi'. Change this to your required hostname. Then hit Ctrl-X and \"y\" to save your changes. Alternatively, you may also use the following CLI command to achieve the same result: sudo hostnamectl set-hostname <name> Whichever method is used to update the hostname file, next edit the /etc/hosts file: sudo nano /etc/hosts Change each instance of 'wlanpi' to the new hostname (there are usually two instances). Then hit Ctrl-X and \"y\" to save your changes. Finally, reboot your WLAN Pi: sudo reboot How do I set the timezone on my WLAN Pi? From the CLI of your WLAN Pi: sudo dpkg-reconfigure tzdata How do I connect my WLAN Pi to my wireless network? Assuming your network uses a PSK, simply edit the following files: /etc/network/interfaces /etc/wpa_supplicant/wpa_supplicant.conf /etc/network/interfaces Edit the file as follows: sudo nano /etc/network/interfaces Edit the following section of the file for wlan0: # Wireless adapter #1 # Armbian ships with network-manager installed by default. To save you time # and hassles consider using 'sudo nmtui' instead of configuring Wi-Fi settings # manually. The below lines are only meant as an example how configuration could # be done in an anachronistic way: # allow-hotplug wlan0 iface wlan0 inet dhcp #address 192.168.0.100 #netmask 255.255.255.0 #gateway 192.168.0.1 #dns-nameservers 8.8.8.8 8.8.4.4 # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf # Disable power saving on compatible chipsets (prevents SSH/connection dropouts over WiFi) wireless-mode Monitor #wireless-power off Remove the \"#\" character from the start of the line: # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf Save the file by hitting CTRL-x /etc/wpa_supplicant/wpa_supplicant.conf Edit the file as follows: sudo nano /etc/wpa_supplicant/wpa_supplicant.conf <make your changes> CTRL-x Enter your SSID and PSK in the areas indicated in the file. For the new settings to take effect, you have 3 options: Unplug and re-insert your USB wireless NIC Issue the following command on the WLAN Pi CLI : sudo ifdown wlan0; sudo ifup wlan0 Reboot your WLAN Pi (remove the power or issue the sudo reboot command on the CLI) (For other security methods, look in the following file for configuration examples: /home/wlanpi/wiperf/conf/etc/wpa_supplicant/wpa_supplicant.conf) I'm having difficult getting a connection over the USB link to my WLAN Pi? What's going on? The WLAN Pi has a very useful feature that allows you to connect your Mac or Window machine to a WAN Pi via a USB connection. This is effectively an Ethernet over USB connection, also known as an OTG connection (On The Go). This requires a USB to micro-USB cable to hook up your laptop/Mac to the micro-USB socket on the WLAN Pi (which is also used to power the WLAN Pi). This is very cool as it both powers up your WLAN Pi and gives you a local network connection to the WLAN Pi so that you can SSH or browse in to it. There are two main issues we have seen with connectivity over the OTG connection: Some cables that look like an OTG cable (i.e. a regular USB plug on one end and a micro-USB on the other) are, in fact, just phone charger cables and only have the power wires through. This means there are no data wires and you can never establish the OTG connection. The WLAN Pi will power up, but the OTG connection will not work. (You can check if you have an OTG connection by looking at the network interfaces on your laptop/Mac - if OTG is working, a new Ethernet port automagically appears.) If you hit this issue, try another cable (or two) The second issue we hear about impacts Windows users. Please check out this super blog post if you have a Windows laptop and you think your cable is good: Blog Post Link Which wireless adapters are supported on the WLAN Pi ? Up to image version (but not including) v1.9, the only WLAN chipset supported was the Realtek 8812au. The Comfast CF-912AC was the only adapter that had been tested to provide support for all WLAN Pi features. From v1.9 onwards, support for the Realtek 8812au chipset continued, but a driver for the MediaTek mt7610u chipset was also added. Testing was performed with a wide range of adapters using both chipsets. The range of features supported varied quite widely and the CF-912AC is still the only adapter that supports all features. However, other adapters do work to varying degrees and an alternative adapter may meet your needs. The testing results showing the adapters tested and the WLAN Pi features that work with each one are shown in this sheet: link (In a future version of the WLAN Pi image, there will be far more extensive support of features for MediaTek adapters that will be provided by a kernel update within the image.) Where can I get help support with my WLAN Pi? Support is on a volunteer/best efforts basis by project volunteers. Try here How do I suggest a new feature for the WLAN Pi? If you have a feature suggestion for the WLAN Pi, please get along to the GitHub site for the project and open an issue ticket with your suggestion: link (this will need a (free) GitHub account to create an issue)","title":"FAQ"},{"location":"v1/faq/#faq","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi","title":"FAQ"},{"location":"v1/faq/#where-can-i-get-the-latest-wlan-pi-image","text":"The latest WLAN Pi image is available here (avoid the alpha releases, they are unstable, development builds, Beta are usually pretty good but may have the odd bug)","title":"Where can I get the latest WLAN Pi image?"},{"location":"v1/faq/#how-do-i-find-which-image-version-is-currently-installed-on-my-wlan","text":"If you look on the top-level \"home\" page of the front panel display, the version number of the image should be shown on the top left of the display. If you see no version number, it may be that you have quite an old version of image. If you have network connectivity to the WLAN Pi, browse to it (192.168.42.1 if you're on the USB OTG connection) and look at the top of the web page to see the image version.","title":"How do I find which image version is currently installed on my WLAN?"},{"location":"v1/faq/#how-do-i-burn-a-wlan-pi-image","text":"If you'd like to burn a WLAN Pi image on to a kit you've bought or update the image of your existing WLAN Pi, here is a video explaining the process:","title":"How do I burn a WLAN Pi image?"},{"location":"v1/faq/#how-do-i-change-the-password-for-the-wlanpi-user","text":"Changing the default password for the wlanpi user is highly recommended to help secure your unit. To change from the default password (which is 'wlanpi'), SSH to the WLANP Pi and use the 'passwd' command as follows: wlanpi@wlanpi:~$ passwd Changing password for wlanpi. (current) UNIX password: wlanpi Enter new UNIX password: <enter new pwd> Retype new UNIX password: <enter new pwd again> passwd: password updated successfully wlanpi@wlanpi:~$ If connecting the WLAN Pi to any network, changing the default password should be a top priority. If the WLAN Pi becomes compromised as default credentials have been left in place, this could have very serious consequences.","title":"How do I change the password for the wlanpi user"},{"location":"v1/faq/#how-do-i-change-the-hostname-of-my-wlan-pi","text":"By default, the hostname of your WLAN Pi is : wlanpi If you'd like to change this to a more meaningful hostname, then you will need to SSH to your WLAN Pi and update the /etc/hostname and /etc/hosts files, followed by a reboot of the WLAN Pi: Edit the /etc/hostname file using the command: sudo nano /etc/hostname There is a single line that says 'wlanpi'. Change this to your required hostname. Then hit Ctrl-X and \"y\" to save your changes. Alternatively, you may also use the following CLI command to achieve the same result: sudo hostnamectl set-hostname <name> Whichever method is used to update the hostname file, next edit the /etc/hosts file: sudo nano /etc/hosts Change each instance of 'wlanpi' to the new hostname (there are usually two instances). Then hit Ctrl-X and \"y\" to save your changes. Finally, reboot your WLAN Pi: sudo reboot","title":"How do I change the hostname of my WLAN Pi"},{"location":"v1/faq/#how-do-i-set-the-timezone-on-my-wlan-pi","text":"From the CLI of your WLAN Pi: sudo dpkg-reconfigure tzdata","title":"How do I set the timezone on my WLAN Pi?"},{"location":"v1/faq/#how-do-i-connect-my-wlan-pi-to-my-wireless-network","text":"Assuming your network uses a PSK, simply edit the following files: /etc/network/interfaces /etc/wpa_supplicant/wpa_supplicant.conf","title":"How do I connect my WLAN Pi to my wireless network?"},{"location":"v1/faq/#etcnetworkinterfaces","text":"Edit the file as follows: sudo nano /etc/network/interfaces Edit the following section of the file for wlan0: # Wireless adapter #1 # Armbian ships with network-manager installed by default. To save you time # and hassles consider using 'sudo nmtui' instead of configuring Wi-Fi settings # manually. The below lines are only meant as an example how configuration could # be done in an anachronistic way: # allow-hotplug wlan0 iface wlan0 inet dhcp #address 192.168.0.100 #netmask 255.255.255.0 #gateway 192.168.0.1 #dns-nameservers 8.8.8.8 8.8.4.4 # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf # Disable power saving on compatible chipsets (prevents SSH/connection dropouts over WiFi) wireless-mode Monitor #wireless-power off Remove the \"#\" character from the start of the line: # wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf Save the file by hitting CTRL-x","title":"/etc/network/interfaces"},{"location":"v1/faq/#etcwpa_supplicantwpa_supplicantconf","text":"Edit the file as follows: sudo nano /etc/wpa_supplicant/wpa_supplicant.conf <make your changes> CTRL-x Enter your SSID and PSK in the areas indicated in the file. For the new settings to take effect, you have 3 options: Unplug and re-insert your USB wireless NIC Issue the following command on the WLAN Pi CLI : sudo ifdown wlan0; sudo ifup wlan0 Reboot your WLAN Pi (remove the power or issue the sudo reboot command on the CLI) (For other security methods, look in the following file for configuration examples: /home/wlanpi/wiperf/conf/etc/wpa_supplicant/wpa_supplicant.conf)","title":"/etc/wpa_supplicant/wpa_supplicant.conf"},{"location":"v1/faq/#im-having-difficult-getting-a-connection-over-the-usb-link-to-my-wlan-pi-whats-going-on","text":"The WLAN Pi has a very useful feature that allows you to connect your Mac or Window machine to a WAN Pi via a USB connection. This is effectively an Ethernet over USB connection, also known as an OTG connection (On The Go). This requires a USB to micro-USB cable to hook up your laptop/Mac to the micro-USB socket on the WLAN Pi (which is also used to power the WLAN Pi). This is very cool as it both powers up your WLAN Pi and gives you a local network connection to the WLAN Pi so that you can SSH or browse in to it. There are two main issues we have seen with connectivity over the OTG connection: Some cables that look like an OTG cable (i.e. a regular USB plug on one end and a micro-USB on the other) are, in fact, just phone charger cables and only have the power wires through. This means there are no data wires and you can never establish the OTG connection. The WLAN Pi will power up, but the OTG connection will not work. (You can check if you have an OTG connection by looking at the network interfaces on your laptop/Mac - if OTG is working, a new Ethernet port automagically appears.) If you hit this issue, try another cable (or two) The second issue we hear about impacts Windows users. Please check out this super blog post if you have a Windows laptop and you think your cable is good: Blog Post Link","title":"I'm having difficult getting a connection over the USB link to my WLAN Pi? What's going on?"},{"location":"v1/faq/#which-wireless-adapters-are-supported-on-the-wlan-pi","text":"Up to image version (but not including) v1.9, the only WLAN chipset supported was the Realtek 8812au. The Comfast CF-912AC was the only adapter that had been tested to provide support for all WLAN Pi features. From v1.9 onwards, support for the Realtek 8812au chipset continued, but a driver for the MediaTek mt7610u chipset was also added. Testing was performed with a wide range of adapters using both chipsets. The range of features supported varied quite widely and the CF-912AC is still the only adapter that supports all features. However, other adapters do work to varying degrees and an alternative adapter may meet your needs. The testing results showing the adapters tested and the WLAN Pi features that work with each one are shown in this sheet: link (In a future version of the WLAN Pi image, there will be far more extensive support of features for MediaTek adapters that will be provided by a kernel update within the image.)","title":"Which wireless adapters are supported on the WLAN Pi ?"},{"location":"v1/faq/#where-can-i-get-help-support-with-my-wlan-pi","text":"Support is on a volunteer/best efforts basis by project volunteers. Try here","title":"Where can I get help support with my WLAN Pi?"},{"location":"v1/faq/#how-do-i-suggest-a-new-feature-for-the-wlan-pi","text":"If you have a feature suggestion for the WLAN Pi, please get along to the GitHub site for the project and open an issue ticket with your suggestion: link (this will need a (free) GitHub account to create an issue)","title":"How do I suggest a new feature for the WLAN Pi?"},{"location":"v1/getting_started_build_your_own/","text":"Getting Started with the WLAN Pi Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Building Your Own Kit Rolling your own WLAN Pi takes a little more work than a pre-built kit, but with a little effort, you can source all of the parts and put one together. Here is a list of the items you are going to need to source to build your own WLAN Pi: A NanoPi NEO2 from the FriendlyArm company (located in China): this is the WLAN Pi hardware platform itself (Note that this comes with a micro-SD card, so you do not need to purchase a separate card unless you want a spare ) A Comfast CF-912 USB wireless adapter: this is the currently recommended adapter to support the various wireless operations that the WLAN Pi supports (you can usually get these fom eBay or Amazon ) An micro-SD to USB adapter module to allow images to be burned on to the WLAN Pi (easily sourced fom Amazon ) A USB to micro-USB cable to power and/or provide connectivity to the WLAN Pi (the flavour of USB cable will depend on your requirements) Optional extra items: A power supply . The Raspberry Pi PSUs work fine with the WLAN Pi and are readily available from Amazon (Note that you can also use your USB to micro USB cable with a phone charger PSU in many cases if you'd prefer not to buy a dedicated PSU) POE Splitter . If you'd like to power your WLAN Pi from a switch POE port, a splitter is just what you need. However, ensure that you buy a splitter that supports Gigabit-Ethernet , as many low-cost POE splitters are only 100mbps Ethernet (which is not great when you are using the WLAN Pi for speedtests or iperf). Lithium battery (in case you want to leave the WLAN Pi powered on for a few hours somewhere) Extra micro-SD card (in case you'd like a spare for different image versions or customizations) Custom Handheld Case : Designed specifically for use with the WLAN Pi, houses the Wi-Fi adapter and USB-C cable, while still exposing the USB port and ethernet port on the bottom, while still allowing access to the MicroSD slot - a great additon to make the WLAN Pi in to a true hand-held tester! (Created by Joel Crane @Potato_Fi More info: http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html (Note: some the the links on this page are Amazon affiliate links)","title":"Build Your Own"},{"location":"v1/getting_started_build_your_own/#getting-started-with-the-wlan-pi","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi","title":"Getting Started with the WLAN Pi"},{"location":"v1/getting_started_build_your_own/#building-your-own-kit","text":"Rolling your own WLAN Pi takes a little more work than a pre-built kit, but with a little effort, you can source all of the parts and put one together. Here is a list of the items you are going to need to source to build your own WLAN Pi: A NanoPi NEO2 from the FriendlyArm company (located in China): this is the WLAN Pi hardware platform itself (Note that this comes with a micro-SD card, so you do not need to purchase a separate card unless you want a spare ) A Comfast CF-912 USB wireless adapter: this is the currently recommended adapter to support the various wireless operations that the WLAN Pi supports (you can usually get these fom eBay or Amazon ) An micro-SD to USB adapter module to allow images to be burned on to the WLAN Pi (easily sourced fom Amazon ) A USB to micro-USB cable to power and/or provide connectivity to the WLAN Pi (the flavour of USB cable will depend on your requirements) Optional extra items: A power supply . The Raspberry Pi PSUs work fine with the WLAN Pi and are readily available from Amazon (Note that you can also use your USB to micro USB cable with a phone charger PSU in many cases if you'd prefer not to buy a dedicated PSU) POE Splitter . If you'd like to power your WLAN Pi from a switch POE port, a splitter is just what you need. However, ensure that you buy a splitter that supports Gigabit-Ethernet , as many low-cost POE splitters are only 100mbps Ethernet (which is not great when you are using the WLAN Pi for speedtests or iperf). Lithium battery (in case you want to leave the WLAN Pi powered on for a few hours somewhere) Extra micro-SD card (in case you'd like a spare for different image versions or customizations) Custom Handheld Case : Designed specifically for use with the WLAN Pi, houses the Wi-Fi adapter and USB-C cable, while still exposing the USB port and ethernet port on the bottom, while still allowing access to the MicroSD slot - a great additon to make the WLAN Pi in to a true hand-held tester! (Created by Joel Crane @Potato_Fi More info: http://www.potatofi.com/2019/10/the-wlan-pi-handheld-case.html (Note: some the the links on this page are Amazon affiliate links)","title":"Building Your Own Kit"},{"location":"v1/getting_started_buy_kit/","text":"Getting Started with the WLAN Pi Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Buying a Kit If you'd like to buy a pre-built kit, check out our suppliers page . We'll keep this updated with kit buying options. One of the easiest options is to buy the kit from the WLPC store . You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. ( However, if you're a nuts & bolts type of person who like to roll up your sleeves and build stuff yourself, check out our \"build your own kit page\" )","title":"Buy a Kit"},{"location":"v1/getting_started_buy_kit/#getting-started-with-the-wlan-pi","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi","title":"Getting Started with the WLAN Pi"},{"location":"v1/getting_started_buy_kit/#buying-a-kit","text":"If you'd like to buy a pre-built kit, check out our suppliers page . We'll keep this updated with kit buying options. One of the easiest options is to buy the kit from the WLPC store . You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. ( However, if you're a nuts & bolts type of person who like to roll up your sleeves and build stuff yourself, check out our \"build your own kit page\" )","title":"Buying a Kit"},{"location":"v1/getting_started_overview/","text":"Getting Started with the WLAN Pi Note that this documentation is for the deprecated version 1 software image of the WLAN Pi User Guide If you have your WLAN Pi hardware and you'd like to find out what you can do with your WLAN Pi, you can check out this user guide . This guide is a couple of years old now, but has some great information providing you with more background to the WLAN Pi and will get you going with some of its great utilities. Info User Guide Hardware To get started with the WLAN Pi, you're going to need to get hold of some WLAN Pi hardware. The items you'll need are all generally low cost and relatively easy to source. There are a few options available to get yourself set up with a WLAN Pi: Attend a WLPC conference and complete one of the WLAN Pi deep dive sessions Buy a complete kit from the WLPC online store Source the individual items you'll need yourself from various suppliers. Obviously, buying the kit from the WLPC store is a quick and easy option. You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. However, if you're a nuts & bolts type of person who likes to roll up your sleeves and build stuff yourself, you can source the various component parts yourself and build from scratch . (This will likely take you quite a lot longer to do compared to buying the kit, but arguably may be more fun and slightly cheaper). Check out the links below for more information: Buying a Kit Build Your Own From Scratch Note Looking for supported wireless adapter types? Check here","title":"Overview"},{"location":"v1/getting_started_overview/#getting-started-with-the-wlan-pi","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi","title":"Getting Started with the WLAN Pi"},{"location":"v1/getting_started_overview/#user-guide","text":"If you have your WLAN Pi hardware and you'd like to find out what you can do with your WLAN Pi, you can check out this user guide . This guide is a couple of years old now, but has some great information providing you with more background to the WLAN Pi and will get you going with some of its great utilities. Info User Guide","title":"User Guide"},{"location":"v1/getting_started_overview/#hardware","text":"To get started with the WLAN Pi, you're going to need to get hold of some WLAN Pi hardware. The items you'll need are all generally low cost and relatively easy to source. There are a few options available to get yourself set up with a WLAN Pi: Attend a WLPC conference and complete one of the WLAN Pi deep dive sessions Buy a complete kit from the WLPC online store Source the individual items you'll need yourself from various suppliers. Obviously, buying the kit from the WLPC store is a quick and easy option. You get the advantage of having all the components you need in one order, and the kit comes pre-assembled with a software image burned and ready to go. You also have a reputable, single source to contact if there are any issues with your purchase. However, if you're a nuts & bolts type of person who likes to roll up your sleeves and build stuff yourself, you can source the various component parts yourself and build from scratch . (This will likely take you quite a lot longer to do compared to buying the kit, but arguably may be more fun and slightly cheaper). Check out the links below for more information: Buying a Kit Build Your Own From Scratch Note Looking for supported wireless adapter types? Check here","title":"Hardware"},{"location":"v1/packages/","text":"Packages Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLANPi image is supplied with a number of useful networking programs, utilities and scripts to help the WLAN professional out in the field. An overview of each of these packages is provided in this section. Perf Measurement HTML Speedtest iPerf Ruckus Zap Ookla Speedtest Analysis Kismet Horst Scapy Tcpdump Termshark extcap Uilities Wi-Fi Console Hotspot Mode Wiperf Profiler","title":"Overview"},{"location":"v1/packages/#packages","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLANPi image is supplied with a number of useful networking programs, utilities and scripts to help the WLAN professional out in the field. An overview of each of these packages is provided in this section. Perf Measurement HTML Speedtest iPerf Ruckus Zap Ookla Speedtest Analysis Kismet Horst Scapy Tcpdump Termshark extcap Uilities Wi-Fi Console Hotspot Mode Wiperf Profiler","title":"Packages"},{"location":"v1/pkg_analysis_extcap/","text":"extcap Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The extcap project was originally created by Adrian Granados. The utility is a wrapper around the SSHDump feature provided in Wireshark 3.x. Extcap feature is not actually a package on the WLAN Pi, but is an external utility that allows the WLAN Pi to be used as a remote capture device using Wireshark. It needs to be installed on the laptop where Wireshark is installed. It also provides additional options within Wireshark to allow the configuration of the WLAN Pi device to start a remote wireless frame capture. A Windows version of the extcap project was created by Nigel Bowden, providing a Windows-native version of the utility. The video below shows how to use the extcap feature in Wireshark, using the WLAN Pi as a capture source. Checkout these useful links for more information about extcap: Wireshark Plugin To Capture Wireless Frames Using a WLANPi (Windows 10) Githib: Wireshark extcap interface for remote wireless captures Github: Wxtcap for Windows","title":"extcap"},{"location":"v1/pkg_analysis_extcap/#extcap","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The extcap project was originally created by Adrian Granados. The utility is a wrapper around the SSHDump feature provided in Wireshark 3.x. Extcap feature is not actually a package on the WLAN Pi, but is an external utility that allows the WLAN Pi to be used as a remote capture device using Wireshark. It needs to be installed on the laptop where Wireshark is installed. It also provides additional options within Wireshark to allow the configuration of the WLAN Pi device to start a remote wireless frame capture. A Windows version of the extcap project was created by Nigel Bowden, providing a Windows-native version of the utility. The video below shows how to use the extcap feature in Wireshark, using the WLAN Pi as a capture source. Checkout these useful links for more information about extcap: Wireshark Plugin To Capture Wireless Frames Using a WLANPi (Windows 10) Githib: Wireshark extcap interface for remote wireless captures Github: Wxtcap for Windows","title":"extcap"},{"location":"v1/pkg_analysis_horst/","text":"Horst Note that this documentation is for the deprecated version 1 software image of the WLAN Pi horst is a small, lightweight IEEE802.11 WLAN analyzer with a text interface. It's a Linux program and can be used on any wireless LAN interface which supports monitor mode. Its basic function is similar to tcpdump, Wireshark or Kismet, but it's much smaller and shows different, aggregated information which is not easily available from other tools. It is made for debugging wireless LANs with a focus on getting a quick overview instead of deep packet inspection and has special features for Ad-hoc (IBSS) mode and mesh networks. It can be useful to get a quick overview of what's going on all wireless LAN channels and to identify problems. It includes the following features: Shows signal (RSSI) values per station, something hard to get, especially in IBSS mode Calculates channel utilization (\u201cusage\u201d) by adding up the amount of time the packets actually occupy the medium \u201cSpectrum Analyzer\u201d shows signal levels and usage per channel Graphical packet history, with signal, packet type and physical rate Shows all stations per ESSID and the live TSF per node as it is counting Detects IBSS \u201csplits\u201d (same ESSID but different BSSID \u2013 this is/was a common driver problem on IBSS mode) Statistics of packets/bytes per physical rate and per packet type Has some support for mesh protocols (OLSR and batman) Can filter specific packet types, operating modes, source addresses or BSSIDs Client/server support for monitoring on remote nodes Automatically adds and removes monitor interface Usage horst needs sudo permissions to run, and has a few command line switches, the most notable one to use is \u2013C which allows you to set the channel used, see the man page for a complete listing. To launch horst, SSH to your WLAN Pi and issue the following command to launch the terminal UI: sudo horst # to launch against an interface other than wlan0: sudo horst -i wlan1 To view all horst options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages): man horst After launching the program, pay attention to the bottom left of the program which will allow you to access the different menu options: Press C to access the channel menu and changes: Horst will also display some stats as to what type and how many types of a frame it is receiving: Lastly horst is a poor man\u2019s spectrum analyzer, which will allow you to see some basic info regarding the channel: horst is another application that hasn\u2019t been updated in some time and may have some bugs or may not work with the latest hardware. More info can be found in the man page or at https://github.com/br101/horst (Contributed by Ian Stout)","title":"Horst"},{"location":"v1/pkg_analysis_horst/#horst","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi horst is a small, lightweight IEEE802.11 WLAN analyzer with a text interface. It's a Linux program and can be used on any wireless LAN interface which supports monitor mode. Its basic function is similar to tcpdump, Wireshark or Kismet, but it's much smaller and shows different, aggregated information which is not easily available from other tools. It is made for debugging wireless LANs with a focus on getting a quick overview instead of deep packet inspection and has special features for Ad-hoc (IBSS) mode and mesh networks. It can be useful to get a quick overview of what's going on all wireless LAN channels and to identify problems. It includes the following features: Shows signal (RSSI) values per station, something hard to get, especially in IBSS mode Calculates channel utilization (\u201cusage\u201d) by adding up the amount of time the packets actually occupy the medium \u201cSpectrum Analyzer\u201d shows signal levels and usage per channel Graphical packet history, with signal, packet type and physical rate Shows all stations per ESSID and the live TSF per node as it is counting Detects IBSS \u201csplits\u201d (same ESSID but different BSSID \u2013 this is/was a common driver problem on IBSS mode) Statistics of packets/bytes per physical rate and per packet type Has some support for mesh protocols (OLSR and batman) Can filter specific packet types, operating modes, source addresses or BSSIDs Client/server support for monitoring on remote nodes Automatically adds and removes monitor interface","title":"Horst"},{"location":"v1/pkg_analysis_horst/#usage","text":"horst needs sudo permissions to run, and has a few command line switches, the most notable one to use is \u2013C which allows you to set the channel used, see the man page for a complete listing. To launch horst, SSH to your WLAN Pi and issue the following command to launch the terminal UI: sudo horst # to launch against an interface other than wlan0: sudo horst -i wlan1 To view all horst options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages): man horst After launching the program, pay attention to the bottom left of the program which will allow you to access the different menu options: Press C to access the channel menu and changes: Horst will also display some stats as to what type and how many types of a frame it is receiving: Lastly horst is a poor man\u2019s spectrum analyzer, which will allow you to see some basic info regarding the channel: horst is another application that hasn\u2019t been updated in some time and may have some bugs or may not work with the latest hardware. More info can be found in the man page or at https://github.com/br101/horst (Contributed by Ian Stout)","title":"Usage"},{"location":"v1/pkg_analysis_kismet/","text":"Kismet Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"Kismet"},{"location":"v1/pkg_analysis_kismet/#kismet","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"Kismet"},{"location":"v1/pkg_analysis_scapy/","text":"Scapy Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"Scapy"},{"location":"v1/pkg_analysis_scapy/#scapy","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"Scapy"},{"location":"v1/pkg_analysis_termshark/","text":"Termshark Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Termshark is a terminal based UI that provides a Wireshark-type experience from the CLI. It provides many of the features of Wireshark, but delivered locally on the WLAN Pi via a text-based UI. To get to know more about Termshark, visit the official web site . To try Termshark out on the WLAN Pi, SSH to your WLAN Pi (make sure your terminal emulation is setup to use ANSI mode and enable colours) and enter the following command: sudo termshark -i wlan0 Note make sure you have a WLAN adapter that supports monitor mode plugged in) After a few seconds, you should see some activity on the UI and frames being decoded. To access the filter bar area, hit the '/' key and left/right arrows to make selections. To exit, hit the 'esc' key and use arrow keys to select 'Misc' and hit 'q' to quit. You can find out more about using the application in the official user guide","title":"Termshark"},{"location":"v1/pkg_analysis_termshark/#termshark","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Termshark is a terminal based UI that provides a Wireshark-type experience from the CLI. It provides many of the features of Wireshark, but delivered locally on the WLAN Pi via a text-based UI. To get to know more about Termshark, visit the official web site . To try Termshark out on the WLAN Pi, SSH to your WLAN Pi (make sure your terminal emulation is setup to use ANSI mode and enable colours) and enter the following command: sudo termshark -i wlan0 Note make sure you have a WLAN adapter that supports monitor mode plugged in) After a few seconds, you should see some activity on the UI and frames being decoded. To access the filter bar area, hit the '/' key and left/right arrows to make selections. To exit, hit the 'esc' key and use arrow keys to select 'Misc' and hit 'q' to quit. You can find out more about using the application in the official user guide","title":"Termshark"},{"location":"v1/pkg_perf_iperf/","text":"iperf Note that this documentation is for the deprecated version 1 software image of the WLAN Pi iperf is a tool for performing network throughput measurements. It can test either TCP or UDP throughput. To perform an iperf test the user must establish both a server (to receive traffic) and a client (to generate traffic). The WLAN Pi has iperf2 and iperf3 servers running upon start-up, these servers are using the default options for each version. For reference, iperf uses the following ports: iperf2 - 5001 iperf3 - 5201 Iperf3 is a rewrite of iperf from scratch to create a smaller, simpler code base. Iperf3 is not backwards compatible with iperf2. Usage To view all iperf options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages) or use the -h or --help flag for listing of the commands: man iperf iperf -h man iperf3 iperf3 -h Examples Basic throughput test (Note that by default, iperf tests using TCP. To use UDP, see later examples.) iperf -c <server_ip> iperf3 -c <server_ip> Displaying data formatted in different units. The units that in which results are displayed (i.e. Kilobits per sec, Megabits per sec etc.) may be modified using the following command attributes: iperf -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf3 -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf from server to client (reverse direction test) or bi-directional test iperf -c <server_ip> -r -d iperf3 -c <server_ip> -R or iperf3 -c <server_ip> --bidir iperf using udp iperf -c <server_ip> -u iperf3 -c <server_ip> -u References The following references may be useful for further information about iperf: iperf home page iPerf2 vs iPerf3 | Panos Vouzis | WLPC Phoenix 2020 It's not the Network | Panos Vouzis | WLPC Phoenix 2018 (Contributed by Ian Stout)","title":"iPerf"},{"location":"v1/pkg_perf_iperf/#iperf","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi iperf is a tool for performing network throughput measurements. It can test either TCP or UDP throughput. To perform an iperf test the user must establish both a server (to receive traffic) and a client (to generate traffic). The WLAN Pi has iperf2 and iperf3 servers running upon start-up, these servers are using the default options for each version. For reference, iperf uses the following ports: iperf2 - 5001 iperf3 - 5201 Iperf3 is a rewrite of iperf from scratch to create a smaller, simpler code base. Iperf3 is not backwards compatible with iperf2.","title":"iperf"},{"location":"v1/pkg_perf_iperf/#usage","text":"To view all iperf options, take a look the manual pages for the software using the following CLI command in your SSH session (hit 'q' to quit the man pages) or use the -h or --help flag for listing of the commands: man iperf iperf -h man iperf3 iperf3 -h","title":"Usage"},{"location":"v1/pkg_perf_iperf/#examples","text":"","title":"Examples"},{"location":"v1/pkg_perf_iperf/#basic-throughput-test","text":"(Note that by default, iperf tests using TCP. To use UDP, see later examples.) iperf -c <server_ip> iperf3 -c <server_ip>","title":"Basic throughput test"},{"location":"v1/pkg_perf_iperf/#displaying-data-formatted-in-different-units","text":"The units that in which results are displayed (i.e. Kilobits per sec, Megabits per sec etc.) may be modified using the following command attributes: iperf -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T) iperf3 -c <server_ip> -f (b, B, k, K, m, M, g, G, t, T)","title":"Displaying data formatted in different units."},{"location":"v1/pkg_perf_iperf/#iperf-from-server-to-client-reverse-direction-test-or-bi-directional-test","text":"iperf -c <server_ip> -r -d iperf3 -c <server_ip> -R or iperf3 -c <server_ip> --bidir","title":"iperf from server to client (reverse direction test) or bi-directional test"},{"location":"v1/pkg_perf_iperf/#iperf-using-udp","text":"iperf -c <server_ip> -u iperf3 -c <server_ip> -u","title":"iperf using udp"},{"location":"v1/pkg_perf_iperf/#references","text":"The following references may be useful for further information about iperf: iperf home page iPerf2 vs iPerf3 | Panos Vouzis | WLPC Phoenix 2020 It's not the Network | Panos Vouzis | WLPC Phoenix 2018 (Contributed by Ian Stout)","title":"References"},{"location":"v1/pkg_perf_speedtest/","text":"Speedtest Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"HTML Speedtest"},{"location":"v1/pkg_perf_speedtest/#speedtest","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi TBA","title":"Speedtest"},{"location":"v1/pkg_perf_zap/","text":"Zap Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Zap is a 3rd generation test tool developed by Ruckus to assist in wireless network test and characterization. In the common use case it works by sending bursts of 50 full-size UDP packets. The packet loss and inter-arrival times are monitored and reported. The primary results reported are number of packets lost, total packets received, and detailed throughput statistics. The Zap server is run as a background process each time the WLAN Pi boots, so does not require any additional steps to activate. Performance tests are run by installing the Speedflex app on a mobile device. Usage The Ruckus Speedflex App is available for Android and iOS. Just launch the app on your mobile device and set the IP address of your WLAN Pi as the \"Destination Address\" and any other changes under \"Configuration\". Finally, hit \"Run Test\". The app is now quite old, so not all settings may work on the latest versions. (Contributed by Ian Stout)","title":"Ruckus Zap"},{"location":"v1/pkg_perf_zap/#zap","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Zap is a 3rd generation test tool developed by Ruckus to assist in wireless network test and characterization. In the common use case it works by sending bursts of 50 full-size UDP packets. The packet loss and inter-arrival times are monitored and reported. The primary results reported are number of packets lost, total packets received, and detailed throughput statistics. The Zap server is run as a background process each time the WLAN Pi boots, so does not require any additional steps to activate. Performance tests are run by installing the Speedflex app on a mobile device.","title":"Zap"},{"location":"v1/pkg_perf_zap/#usage","text":"The Ruckus Speedflex App is available for Android and iOS. Just launch the app on your mobile device and set the IP address of your WLAN Pi as the \"Destination Address\" and any other changes under \"Configuration\". Finally, hit \"Run Test\". The app is now quite old, so not all settings may work on the latest versions. (Contributed by Ian Stout)","title":"Usage"},{"location":"v1/pkg_util_hotspot/","text":"Hotspot Mode Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Hotspot mode allows the WLAN Pi to become a small-scale AP to allow a variety of tests to be performed. It broadcasts an SSID, allowing the WLAN Pi to be used as a source for wall attenuation measurements ( see this article ). It may also be used to associate a client and perform speedtest measurements using the WLAN Pi's speedtest and iperf capabilities. Finally, it also supports forwarding so that the WLAN Pi may also be connected to an Ethernet port while in hotspot mode and allow a wireless client to connect through to wired network. To access hotspot mode, on the WLAN Pi front panel, select : Menu > Mode > Hotspot References: GitHub site WLAN Pi - Setup a Wi-Fi Hotspot (blog) WLAN Pi - Bridge Wi-Fi Hotspot to Ethernet Interface","title":"Hotspot Mode"},{"location":"v1/pkg_util_hotspot/#hotspot-mode","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Hotspot mode allows the WLAN Pi to become a small-scale AP to allow a variety of tests to be performed. It broadcasts an SSID, allowing the WLAN Pi to be used as a source for wall attenuation measurements ( see this article ). It may also be used to associate a client and perform speedtest measurements using the WLAN Pi's speedtest and iperf capabilities. Finally, it also supports forwarding so that the WLAN Pi may also be connected to an Ethernet port while in hotspot mode and allow a wireless client to connect through to wired network. To access hotspot mode, on the WLAN Pi front panel, select : Menu > Mode > Hotspot","title":"Hotspot Mode"},{"location":"v1/pkg_util_hotspot/#references","text":"GitHub site WLAN Pi - Setup a Wi-Fi Hotspot (blog) WLAN Pi - Bridge Wi-Fi Hotspot to Ethernet Interface","title":"References:"},{"location":"v1/pkg_util_profiler/","text":"Profiler Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The profiler utility is used to determine the 802.11 capabilities of wireless clients. This information is invaluable when designing a wireless LAN, as client characteristics need to be fully understood for the design process. It works by creating a \"dummy AP\" which broadcasts a test SSID. Clients that need to be profiled then attempt to associated with the test SSID. Although the clients cannot join the SSID, their association frames are captured and analyzed to reveal their characteristics. A textual report for each client is created and stored on the WLAN Pi - this may be accessed via the WLAN Pi web GUI. A demonstration of using the profiler is shown in the video below by Jeff Nyman: You can go direct to the video on YouTube using this link . Visit the profiler GitHub site for more details.","title":"Profiler"},{"location":"v1/pkg_util_profiler/#profiler","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The profiler utility is used to determine the 802.11 capabilities of wireless clients. This information is invaluable when designing a wireless LAN, as client characteristics need to be fully understood for the design process. It works by creating a \"dummy AP\" which broadcasts a test SSID. Clients that need to be profiled then attempt to associated with the test SSID. Although the clients cannot join the SSID, their association frames are captured and analyzed to reveal their characteristics. A textual report for each client is created and stored on the WLAN Pi - this may be accessed via the WLAN Pi web GUI. A demonstration of using the profiler is shown in the video below by Jeff Nyman: You can go direct to the video on YouTube using this link . Visit the profiler GitHub site for more details.","title":"Profiler"},{"location":"v1/pkg_util_wconsole/","text":"Wi-Fi Console Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Turn your WLANPi in to a wireless serial console cable It can be annoying to have to sit in an equipment room to use the serial console port on an item of networking equipment. This project allows you to use a WLANPi to connect to your serial console cable via a Wi-Fi link while sat in the comfort of a nearby office, rather than sat with your laptop on the equipment room floor :) The video below provides a demonstration of using wconsole: Checkout these useful links for more information: Wi-Fi Console GitHub page Instructional video from WiFiNigel","title":"Wi-Fi Console"},{"location":"v1/pkg_util_wconsole/#wi-fi-console","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Turn your WLANPi in to a wireless serial console cable It can be annoying to have to sit in an equipment room to use the serial console port on an item of networking equipment. This project allows you to use a WLANPi to connect to your serial console cable via a Wi-Fi link while sat in the comfort of a nearby office, rather than sat with your laptop on the equipment room floor :) The video below provides a demonstration of using wconsole: Checkout these useful links for more information: Wi-Fi Console GitHub page Instructional video from WiFiNigel","title":"Wi-Fi Console"},{"location":"v1/pkg_util_wiperf/","text":"Wiperf Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi wiperf mode allows you to turn your WLAN Pi in to a wireless client device that runs a series of connectivity and performance tests and reports them back in to Splunk. To find out more about wiperf , please visit the main wiperf project page: link","title":"Wiperf"},{"location":"v1/pkg_util_wiperf/#wiperf","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi The WLAN Pi wiperf mode allows you to turn your WLAN Pi in to a wireless client device that runs a series of connectivity and performance tests and reports them back in to Splunk. To find out more about wiperf , please visit the main wiperf project page: link","title":"Wiperf"},{"location":"v1/useful_links/","text":"Useful Links Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Here is a collection of useful articles and resources that may help you on your WLANPi journey: Development: WLANPi GitHub site WLANPi.com Articles Remote access to a device behind NAT/Firewall","title":"Useful Links"},{"location":"v1/useful_links/#useful-links","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi Here is a collection of useful articles and resources that may help you on your WLANPi journey:","title":"Useful Links"},{"location":"v1/useful_links/#development","text":"WLANPi GitHub site WLANPi.com","title":"Development:"},{"location":"v1/useful_links/#articles","text":"Remote access to a device behind NAT/Firewall","title":"Articles"},{"location":"v1/videos/","text":"WLAN Pi Videos Note that this documentation is for the deprecated version 1 software image of the WLAN Pi There have been quite a few videos made by members of the WLAN Pi Community that might help you learn more about the WLAN Pi. Check them out below: (May 2020) Coffee Hour - Remote Troubleshooting w/ WLAN Pi, Python Scripting (Francois Verges & Rowell Dionicio) (May 2020) How to access the CLI of the WLANPi (WiFiNigel) (May 2020) 10 Easy Things To Do With a WLAN Pi (WiFiNigel) (March 2020) WLAN Pi With Comfast CF-912AC Adapter GUI and SSH (WiFi Viking) (Feb 2020) Using Profiler with the WLanPi, using DFS channels (Whyf16uy) (Jan 2020) How to Burn a New Image on Your WLAN Pi (WiFiNigel) (Feb 2020) WLAN PI Project Update | Jerry Olla | WLPC Phoenix 2020 (Nov 2019) Using the WLANPi as a wireless serial console (WiFiNigel) (Nov 2019 )Wireshark plugin for WLANPi wireless captures using Windows 10 (WiFiNigel) (Oct 2019) WLAN Pi Case Development | Joel Crane | WLPC Prague 2019 (Aug 2019) Customize Your WLAN Pi (Francois Verges) (Feb 2019) WLAN Pi Project | Jerry Olla | WLPC Phoenix 2019 (June 2018) WLAN Pi assembly guide","title":"Videos"},{"location":"v1/videos/#wlan-pi-videos","text":"Note that this documentation is for the deprecated version 1 software image of the WLAN Pi There have been quite a few videos made by members of the WLAN Pi Community that might help you learn more about the WLAN Pi. Check them out below: (May 2020) Coffee Hour - Remote Troubleshooting w/ WLAN Pi, Python Scripting (Francois Verges & Rowell Dionicio) (May 2020) How to access the CLI of the WLANPi (WiFiNigel) (May 2020) 10 Easy Things To Do With a WLAN Pi (WiFiNigel) (March 2020) WLAN Pi With Comfast CF-912AC Adapter GUI and SSH (WiFi Viking) (Feb 2020) Using Profiler with the WLanPi, using DFS channels (Whyf16uy) (Jan 2020) How to Burn a New Image on Your WLAN Pi (WiFiNigel) (Feb 2020) WLAN PI Project Update | Jerry Olla | WLPC Phoenix 2020 (Nov 2019) Using the WLANPi as a wireless serial console (WiFiNigel) (Nov 2019 )Wireshark plugin for WLANPi wireless captures using Windows 10 (WiFiNigel) (Oct 2019) WLAN Pi Case Development | Joel Crane | WLPC Prague 2019 (Aug 2019) Customize Your WLAN Pi (Francois Verges) (Feb 2019) WLAN Pi Project | Jerry Olla | WLPC Phoenix 2019 (June 2018) WLAN Pi assembly guide","title":"WLAN Pi Videos"},{"location":"v2/","text":"What's New In Version 2? The WLAN Pi V2 image was released in October 2020. The image has been rebuilt from the ground up to provide an improved software installation and update process. It's toolset has been revamped, it has many usability improvements and hardware support has been expanded. Version 2.0.0 Announcement Notes You can find the official v2.0.0 announcement here . It details the main feature of the new v2.0.0 release . Version 2.0.0 Video & Slides The WLAN Pi development team presented a collaborative video for the online CWNP 2020 WTF conference that details the main features and improvements of the version 2 image. Links to the video and slide deck are provided on this page . Getting the version 2 Image If you'd like to get hold of the latest version 2 image for your WLAN Pi, you can download the software image from here: WLAN Pi Images (look for the assets section that contains the image - the file name will be something like: wlanpi-neo2-v2.0.0.img.gz ). Note that bugfixes and improvement are being continually added, so please ensure you download the latest 2.x.x image version. To burn your image on to an SD card, the information provided in this video is still good, even though it was created for a v1.x.x image: How to Burn a New Image on Your WLAN Pi (WiFiNigel)","title":"What's New For V2?"},{"location":"v2/#whats-new-in-version-2","text":"The WLAN Pi V2 image was released in October 2020. The image has been rebuilt from the ground up to provide an improved software installation and update process. It's toolset has been revamped, it has many usability improvements and hardware support has been expanded.","title":"What's New In Version 2?"},{"location":"v2/#version-200-announcement-notes","text":"You can find the official v2.0.0 announcement here . It details the main feature of the new v2.0.0 release .","title":"Version 2.0.0 Announcement Notes"},{"location":"v2/#version-200-video-slides","text":"The WLAN Pi development team presented a collaborative video for the online CWNP 2020 WTF conference that details the main features and improvements of the version 2 image. Links to the video and slide deck are provided on this page .","title":"Version 2.0.0 Video &amp; Slides"},{"location":"v2/#getting-the-version-2-image","text":"If you'd like to get hold of the latest version 2 image for your WLAN Pi, you can download the software image from here: WLAN Pi Images (look for the assets section that contains the image - the file name will be something like: wlanpi-neo2-v2.0.0.img.gz ). Note that bugfixes and improvement are being continually added, so please ensure you download the latest 2.x.x image version. To burn your image on to an SD card, the information provided in this video is still good, even though it was created for a v1.x.x image: How to Burn a New Image on Your WLAN Pi (WiFiNigel)","title":"Getting the version 2 Image"},{"location":"v2/v2_announcement/","text":"V2.0.0 Announcement WLAN Pi v2.0.0 WLAN Pi v2 includes some major changes behind the scenes, rebuilt from the ground up on Armbian using the latest Linux kernel (5.8). This update also includes a revamped toolset, many usability improvements, and paves the way for the future of the project to support multiple hardware platforms. Core contributors: @danielmundi @wifinigel @joshschmelzle @jiribrejcha @crvallance @adriangranados Summary New WebUI New Web Admin Interface New Server Mode Updated Profiler Updated Front Panel Menu System (FPMS) Updated Wiperf Mode Updated Wi-Fi Drivers Documentation Site (WIP): docs.wlanpi.com Note 1: The USB Ethernet IP address has been changed to use a static link-local address of 169.254.42.1 Note 2: Several previously included tools have been dropped from the WLAN Pi 2.0 toolset. This allowed us to refocus our efforts on improving a core set of tools that were determined to be the most used and useful. More details on the toolset and what's changed can be found here . New WebUI Extensible framework built on Flask Network information includes: Reachability test Local IP info Public IP info CDP and LLDP neighbor info Profiler results LibreSpeed test improved New Web Admin Interface Cockpit Project - https://cockpit-project.org/ Adjust time zone Manage services Monitor and administer multiple WLAN Pi\u2019s at the same time Embedded terminal New Server Mode Ideal for lab, provisioning, staging and software upgrades of network devices Enables all services on the WLAN Pi like DHCP server, TFTP server, Wi-Fi console, wireless access to the WLAN Pi and more coming soon Safety first: this mode is non-persistent and WLAN Pi will switch back to its default \u201cClassic\u201d mode after reboot Many use cases: Build a lab network, demonstration or a Proof the Concept (PoC) setup Software upgrade of a switch, controller or AP using the TFTP server Point APs to their controller by configuring Option 43 on the WLAN Pi DHCP server http://bit.ly/wlanpi-option43 Easily convert hundreds of APs from Mobility Express or Embedded Wireless Controller mode to Lightweight mode https://bit.ly/convert-to-lightweight Updated Profiler Complete rewrite of the codebase from python2 to python3 Integrated and customized fakeap scapy code Improved performance Packaged and isolated in its own Python environment Dozens of minor improvements Updated Front Panel Menu System (FPMS) Button clicks are 50% more responsive! No more double pressing buttons :) Button layout options - choose your preferred button layout CDP neighbour - now also shows software version if advertised Port blinker - identify switch port number on the far end of the Ethernet cable by blinking switch port LEDs Mist cloud test - verify connectivity to the cloud Updated Wiperf mode Support for testing over Ethernet Support for reporting in to Influx/Grafana Canned dashboard report improvements More details: https://wifinigel.github.io/wiperf/ Updated Wi-Fi Drivers MediaTek MT7612U based Wi-Fi adapters are now fully supported. Ex. Netgear A6210, Alfa AWUS036ACM, or any other Wi-Fi adapter that uses the MT7612U chipset. <-- back","title":"V2.0.0 Announcement"},{"location":"v2/v2_announcement/#v200-announcement","text":"","title":"V2.0.0 Announcement"},{"location":"v2/v2_announcement/#wlan-pi-v200","text":"WLAN Pi v2 includes some major changes behind the scenes, rebuilt from the ground up on Armbian using the latest Linux kernel (5.8). This update also includes a revamped toolset, many usability improvements, and paves the way for the future of the project to support multiple hardware platforms. Core contributors: @danielmundi @wifinigel @joshschmelzle @jiribrejcha @crvallance @adriangranados","title":"WLAN Pi v2.0.0"},{"location":"v2/v2_announcement/#summary","text":"New WebUI New Web Admin Interface New Server Mode Updated Profiler Updated Front Panel Menu System (FPMS) Updated Wiperf Mode Updated Wi-Fi Drivers Documentation Site (WIP): docs.wlanpi.com Note 1: The USB Ethernet IP address has been changed to use a static link-local address of 169.254.42.1 Note 2: Several previously included tools have been dropped from the WLAN Pi 2.0 toolset. This allowed us to refocus our efforts on improving a core set of tools that were determined to be the most used and useful. More details on the toolset and what's changed can be found here .","title":"Summary"},{"location":"v2/v2_announcement/#new-webui","text":"Extensible framework built on Flask Network information includes: Reachability test Local IP info Public IP info CDP and LLDP neighbor info Profiler results LibreSpeed test improved","title":" New WebUI"},{"location":"v2/v2_announcement/#new-web-admin-interface","text":"Cockpit Project - https://cockpit-project.org/ Adjust time zone Manage services Monitor and administer multiple WLAN Pi\u2019s at the same time Embedded terminal","title":" New Web Admin Interface"},{"location":"v2/v2_announcement/#new-server-mode","text":"Ideal for lab, provisioning, staging and software upgrades of network devices Enables all services on the WLAN Pi like DHCP server, TFTP server, Wi-Fi console, wireless access to the WLAN Pi and more coming soon Safety first: this mode is non-persistent and WLAN Pi will switch back to its default \u201cClassic\u201d mode after reboot Many use cases: Build a lab network, demonstration or a Proof the Concept (PoC) setup Software upgrade of a switch, controller or AP using the TFTP server Point APs to their controller by configuring Option 43 on the WLAN Pi DHCP server http://bit.ly/wlanpi-option43 Easily convert hundreds of APs from Mobility Express or Embedded Wireless Controller mode to Lightweight mode https://bit.ly/convert-to-lightweight","title":" New Server Mode"},{"location":"v2/v2_announcement/#updated-profiler","text":"Complete rewrite of the codebase from python2 to python3 Integrated and customized fakeap scapy code Improved performance Packaged and isolated in its own Python environment Dozens of minor improvements","title":" Updated Profiler"},{"location":"v2/v2_announcement/#updated-front-panel-menu-system-fpms","text":"Button clicks are 50% more responsive! No more double pressing buttons :) Button layout options - choose your preferred button layout CDP neighbour - now also shows software version if advertised Port blinker - identify switch port number on the far end of the Ethernet cable by blinking switch port LEDs Mist cloud test - verify connectivity to the cloud","title":" Updated Front Panel Menu System (FPMS)"},{"location":"v2/v2_announcement/#updated-wiperf-mode","text":"Support for testing over Ethernet Support for reporting in to Influx/Grafana Canned dashboard report improvements More details: https://wifinigel.github.io/wiperf/","title":" Updated Wiperf mode"},{"location":"v2/v2_announcement/#updated-wi-fi-drivers","text":"MediaTek MT7612U based Wi-Fi adapters are now fully supported. Ex. Netgear A6210, Alfa AWUS036ACM, or any other Wi-Fi adapter that uses the MT7612U chipset. <-- back","title":" Updated Wi-Fi Drivers"},{"location":"v2/v2_video/","text":"WTF Conference Video & Slides The version 2 release also coincided with the CWNP 2020 WTF conference . The WLAN Pi development team presented a collaborative video that details the main features and improvements of the version 2 image. Links to the video and slide deck are provided below: WLAN Pi Version 2.0 WTF Video WLAN Pi Version 2.0 WTF Slides We covered a number of topics in the WTF video. Time-stamped links to each topic are provided below: Overview Build Process Overview Python/pipx Toolset Updates WebUI & Profiler FPMS Wiperf What's Next <-- back","title":"Version 2 Video?"},{"location":"v2/v2_video/#wtf-conference-video-slides","text":"The version 2 release also coincided with the CWNP 2020 WTF conference . The WLAN Pi development team presented a collaborative video that details the main features and improvements of the version 2 image. Links to the video and slide deck are provided below: WLAN Pi Version 2.0 WTF Video WLAN Pi Version 2.0 WTF Slides We covered a number of topics in the WTF video. Time-stamped links to each topic are provided below: Overview Build Process Overview Python/pipx Toolset Updates WebUI & Profiler FPMS Wiperf What's Next <-- back","title":"WTF Conference Video &amp; Slides"}]}